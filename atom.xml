<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>小晓晓晓林</title>
  
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="https://xiaoxiaoxiaoxiaolin.github.io/"/>
  <updated>2019-07-28T10:14:05.400Z</updated>
  <id>https://xiaoxiaoxiaoxiaolin.github.io/</id>
  
  <author>
    <name>L</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>定制Hexo+NexT的个性化博客</title>
    <link href="https://xiaoxiaoxiaoxiaolin.github.io/2019/07/22/%E5%AE%9A%E5%88%B6Hexo-NexT%E7%9A%84%E4%B8%AA%E6%80%A7%E5%8C%96%E5%8D%9A%E5%AE%A2/"/>
    <id>https://xiaoxiaoxiaoxiaolin.github.io/2019/07/22/定制Hexo-NexT的个性化博客/</id>
    <published>2019-07-22T09:02:48.000Z</published>
    <updated>2019-07-28T10:14:05.400Z</updated>
    
    <content type="html"><![CDATA[<blockquote class="blockquote-center">海阔凭鱼跃，天高任鸟飞。</blockquote><p>　　前几天，我写了一篇关于如何使用GitHub＋Hexo搭建个人博客的博文，接下来我会以我的博客为例，讲讲如何对NexT主题的个性化定制和一些细节的优化。</p><a id="more"></a><h3 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h3><p>　　这篇博客主要是next主题的个性化定制，还有一些细节的优化。在搭建的过程，有一些优化，也是参考了大量之前大佬的教程和结合了一些做的比较优秀的博客，我在这里做了一个集合，同时把自己做的而别人没有做的优化，写出来方便大家。</p><p>　　参考的文章我都会贴出原文链接，但是有一些优化，是我自己辛苦更改样式才做出来的效果，有些也是忘记了具体的修改方法，主要是直接审查元素，一点一点的定位到样式表，一点一点的测试修改，相信通过审查元素，你也可以做到。</p><h3 id="安装NexT主题"><a href="#安装NexT主题" class="headerlink" title="安装NexT主题"></a>安装NexT主题</h3><p>　　我使用的是比较简约的<a href="https://github.com/iissnan/hexo-theme-next" target="_blank" rel="noopener">NexT</a>主题，如果你对其他主题感兴趣，可以点击<a href="https://github.com/search?o=desc&q=topic%3Ahexo-theme&s=stars&type=Repositories" target="_blank" rel="noopener">这里</a>。</p><p>　　安装方法：打开博客根目录下的<strong>themes文件夹</strong>，右键<strong>Git Bash</strong>，运行命令：</p><figure class="highlight vim"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git clone http<span class="variable">s:</span>//github.<span class="keyword">com</span>/iissnan/hexo-theme-<span class="keyword">next</span> themes/<span class="keyword">next</span></span><br></pre></td></tr></table></figure><p>　　下载好之后，把hexo-theme-next改为next，接着打开next目录下的主题配置文件_config.yml，找到theme字段，把参数改为theme: next，之后在根目录下运行：</p><figure class="highlight ebnf"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">hexo clean</span></span><br><span class="line"><span class="attribute">hexo s -g</span></span><br></pre></td></tr></table></figure><h4 id="关于-config-yml"><a href="#关于-config-yml" class="headerlink" title="关于_config.yml"></a>关于_config.yml</h4><p>　　首先_config.yml，它是主题配置文件，有两个，名字一样比较容易混淆。</p><ul><li>站点配置文件，位于站点文件夹的根目录下</li></ul><p>例如我的是<code>H:/blog/_config.yml</code></p><ul><li>主题配置文件，位于主题文件夹的根目录下</li></ul><p>例如我的是<code>H:/blog/themes/next/_config.yml</code></p><p>　　Next这个主题包含4钟风格，默认的是Muse，我使用的是<strong>Pisces</strong>。你也可以尝试其他风格，具体操作：打开<code>H:/blog/_config.yml</code>，定位到Schemes，想要哪款主题就取消前面的<strong>#</strong>。</p><figure class="highlight vala"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta"># Schemes</span></span><br><span class="line"><span class="meta">#scheme: Muse</span></span><br><span class="line"><span class="meta">#scheme: Mist</span></span><br><span class="line">scheme: Pisces</span><br><span class="line"><span class="meta">#scheme: Gemini</span></span><br></pre></td></tr></table></figure><h3 id="Next主题美化"><a href="#Next主题美化" class="headerlink" title="Next主题美化"></a>Next主题美化</h3><p>接下来就是主题的美化啦</p><p><img src="/2019/07/22/定制Hexo-NexT的个性化博客/%E8%B9%A6%E8%B7%B6.gif" alt></p><h4 id="添加Github丝带或者角标"><a href="#添加Github丝带或者角标" class="headerlink" title="添加Github丝带或者角标"></a>添加Github丝带或者角标</h4><p>效果图</p><p><img src="/2019/07/22/定制Hexo-NexT的个性化博客/GitHub%E8%A7%92%E6%A0%87.png" alt></p><p>实现方法</p><p>　　首先先点击<a href="https://github.com/blog/273-github-ribbons" target="_blank" rel="noopener">这里</a>或者<a href="http://tholman.com/github-corners/" target="_blank" rel="noopener">这里</a>挑选自己喜欢的样式，并复制代码。</p><p><img src="/2019/07/22/定制Hexo-NexT的个性化博客/GitHub%E8%A7%92%E6%A0%87%E4%BB%A3%E7%A0%81.png" alt></p><p>　　打开<code>themes/next/layout/_layout.swig</code>文件，在<code>&lt;header&gt;&lt;/header&gt;</code>之前添加代码，并把<code>href</code>改为你的博客地址</p><p><img src="/2019/07/22/定制Hexo-NexT的个性化博客/GitHub%E8%A7%92%E6%A0%87%E4%BB%A3%E7%A0%81%E6%88%AA%E5%9B%BE.png" alt></p><h4 id="添加RSS订阅"><a href="#添加RSS订阅" class="headerlink" title="添加RSS订阅"></a>添加RSS订阅</h4><p>效果图</p><p><img src="/2019/07/22/定制Hexo-NexT的个性化博客/RSS.png" alt></p><p>实现方法</p><p>　　首先在博客的根目录<code>H:/blog</code>，安装Hexo插件，插件会放在<code>node_modules</code>这个文件夹。</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm <span class="keyword">install</span> <span class="comment">--save hexo-generator-feed</span></span><br></pre></td></tr></table></figure><p>　　接下来打开<code>H:/blog/_config.yml</code>文件，在末尾添加</p><figure class="highlight vala"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta"># Extensions</span></span><br><span class="line"><span class="meta">## Plugins: http://hexo.io/plugins/</span></span><br><span class="line"><span class="meta"># RSS订阅</span></span><br><span class="line">plugin: hexo-generator-feed</span><br></pre></td></tr></table></figure><p>　　然后打开<code>H:/blog/themes/next/_config.yml</code>文件,找到rss，添加参数</p><figure class="highlight fsharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"># hexo-generator-feed required <span class="keyword">for</span> rss support. Leave rss <span class="keyword">as</span> blank <span class="keyword">to</span> <span class="keyword">use</span> site's feed link.</span><br><span class="line"># Set rss <span class="keyword">to</span> <span class="keyword">false</span> <span class="keyword">to</span> disable feed link. Set rss <span class="keyword">to</span> specific value <span class="keyword">if</span> you have burned your feed already.</span><br><span class="line">rss: /atom.xml</span><br></pre></td></tr></table></figure><h4 id="添加动态背景"><a href="#添加动态背景" class="headerlink" title="添加动态背景"></a>添加动态背景</h4><p>效果图</p><p><img src="/2019/07/22/定制Hexo-NexT的个性化博客/%E5%8A%A8%E6%80%81%E8%83%8C%E6%99%AF.png" alt></p><p>实现方法</p><p>打开<code>H:/blog/_config.yml</code>文件，找到<code>canvas_nest</code>,把false改为true</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">canvas_nest:</span></span><br><span class="line"><span class="attr">  enable:</span> <span class="literal">true</span></span><br><span class="line"><span class="attr">  onmobile:</span> <span class="literal">true</span> <span class="comment"># display on mobile or not</span></span><br><span class="line"><span class="attr">  color:</span> <span class="string">"0,0,255"</span> <span class="comment"># 线条颜色，三个数字分别为(R,G,B)</span></span><br><span class="line"><span class="attr">  opacity:</span> <span class="number">0.5</span> <span class="comment"># 线条透明度（0~1）</span></span><br><span class="line"><span class="attr">  zIndex:</span> <span class="bullet">-1</span> <span class="comment"># 背景的z-index属性</span></span><br><span class="line"><span class="attr">  count:</span> <span class="number">99</span> <span class="comment"># 线条的总数量</span></span><br></pre></td></tr></table></figure><h4 id="鼠标点击特效"><a href="#鼠标点击特效" class="headerlink" title="鼠标点击特效"></a>鼠标点击特效</h4><p>效果图</p><p><img src="/2019/07/22/定制Hexo-NexT的个性化博客/%E9%BC%A0%E6%A0%87%E7%82%B9%E5%87%BB%E7%83%9F%E8%8A%B1.gif" alt></p><p>实现方法</p><p>　　打开<code>H:/blog/themes/next/source/js/src</code>，新建一个firework.js文件，加入以下代码：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">"use strict"</span>;<span class="function"><span class="keyword">function</span> <span class="title">updateCoords</span>(<span class="params">e</span>)</span>&#123;pointerX=(e.clientX||e.touches[<span class="number">0</span>].clientX)-canvasEl.getBoundingClientRect().left,pointerY=e.clientY||e.touches[<span class="number">0</span>].clientY-canvasEl.getBoundingClientRect().top&#125;<span class="function"><span class="keyword">function</span> <span class="title">setParticuleDirection</span>(<span class="params">e</span>)</span>&#123;<span class="keyword">var</span> t=anime.random(<span class="number">0</span>,<span class="number">360</span>)*<span class="built_in">Math</span>.PI/<span class="number">180</span>,a=anime.random(<span class="number">50</span>,<span class="number">180</span>),n=[<span class="number">-1</span>,<span class="number">1</span>][anime.random(<span class="number">0</span>,<span class="number">1</span>)]*a;<span class="keyword">return</span>&#123;<span class="attr">x</span>:e.x+n*<span class="built_in">Math</span>.cos(t),<span class="attr">y</span>:e.y+n*<span class="built_in">Math</span>.sin(t)&#125;&#125;<span class="function"><span class="keyword">function</span> <span class="title">createParticule</span>(<span class="params">e,t</span>)</span>&#123;<span class="keyword">var</span> a=&#123;&#125;;<span class="keyword">return</span> a.x=e,a.y=t,a.color=colors[anime.random(<span class="number">0</span>,colors.length<span class="number">-1</span>)],a.radius=anime.random(<span class="number">16</span>,<span class="number">32</span>),a.endPos=setParticuleDirection(a),a.draw=<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;ctx.beginPath(),ctx.arc(a.x,a.y,a.radius,<span class="number">0</span>,<span class="number">2</span>*<span class="built_in">Math</span>.PI,!<span class="number">0</span>),ctx.fillStyle=a.color,ctx.fill()&#125;,a&#125;<span class="function"><span class="keyword">function</span> <span class="title">createCircle</span>(<span class="params">e,t</span>)</span>&#123;<span class="keyword">var</span> a=&#123;&#125;;<span class="keyword">return</span> a.x=e,a.y=t,a.color=<span class="string">"#F00"</span>,a.radius=<span class="number">0.1</span>,a.alpha=<span class="number">0.5</span>,a.lineWidth=<span class="number">6</span>,a.draw=<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;ctx.globalAlpha=a.alpha,ctx.beginPath(),ctx.arc(a.x,a.y,a.radius,<span class="number">0</span>,<span class="number">2</span>*<span class="built_in">Math</span>.PI,!<span class="number">0</span>),ctx.lineWidth=a.lineWidth,ctx.strokeStyle=a.color,ctx.stroke(),ctx.globalAlpha=<span class="number">1</span>&#125;,a&#125;<span class="function"><span class="keyword">function</span> <span class="title">renderParticule</span>(<span class="params">e</span>)</span>&#123;<span class="keyword">for</span>(<span class="keyword">var</span> t=<span class="number">0</span>;t&lt;e.animatables.length;t++)&#123;e.animatables[t].target.draw()&#125;&#125;<span class="function"><span class="keyword">function</span> <span class="title">animateParticules</span>(<span class="params">e,t</span>)</span>&#123;<span class="keyword">for</span>(<span class="keyword">var</span> a=createCircle(e,t),n=[],i=<span class="number">0</span>;i&lt;numberOfParticules;i++)&#123;n.push(createParticule(e,t))&#125;anime.timeline().add(&#123;<span class="attr">targets</span>:n,<span class="attr">x</span>:<span class="function"><span class="keyword">function</span>(<span class="params">e</span>)</span>&#123;<span class="keyword">return</span> e.endPos.x&#125;,<span class="attr">y</span>:<span class="function"><span class="keyword">function</span>(<span class="params">e</span>)</span>&#123;<span class="keyword">return</span> e.endPos.y&#125;,<span class="attr">radius</span>:<span class="number">0.1</span>,<span class="attr">duration</span>:anime.random(<span class="number">1200</span>,<span class="number">1800</span>),<span class="attr">easing</span>:<span class="string">"easeOutExpo"</span>,<span class="attr">update</span>:renderParticule&#125;).add(&#123;<span class="attr">targets</span>:a,<span class="attr">radius</span>:anime.random(<span class="number">80</span>,<span class="number">160</span>),<span class="attr">lineWidth</span>:<span class="number">0</span>,<span class="attr">alpha</span>:&#123;<span class="attr">value</span>:<span class="number">0</span>,<span class="attr">easing</span>:<span class="string">"linear"</span>,<span class="attr">duration</span>:anime.random(<span class="number">600</span>,<span class="number">800</span>)&#125;,<span class="attr">duration</span>:anime.random(<span class="number">1200</span>,<span class="number">1800</span>),<span class="attr">easing</span>:<span class="string">"easeOutExpo"</span>,<span class="attr">update</span>:renderParticule,<span class="attr">offset</span>:<span class="number">0</span>&#125;)&#125;<span class="function"><span class="keyword">function</span> <span class="title">debounce</span>(<span class="params">e,t</span>)</span>&#123;<span class="keyword">var</span> a;<span class="keyword">return</span> <span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;<span class="keyword">var</span> n=<span class="keyword">this</span>,i=<span class="built_in">arguments</span>;clearTimeout(a),a=setTimeout(<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;e.apply(n,i)&#125;,t)&#125;&#125;<span class="keyword">var</span> canvasEl=<span class="built_in">document</span>.querySelector(<span class="string">".fireworks"</span>);<span class="keyword">if</span>(canvasEl)&#123;<span class="keyword">var</span> ctx=canvasEl.getContext(<span class="string">"2d"</span>),numberOfParticules=<span class="number">30</span>,pointerX=<span class="number">0</span>,pointerY=<span class="number">0</span>,tap=<span class="string">"mousedown"</span>,colors=[<span class="string">"#FF1461"</span>,<span class="string">"#18FF92"</span>,<span class="string">"#5A87FF"</span>,<span class="string">"#FBF38C"</span>],setCanvasSize=debounce(<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;canvasEl.width=<span class="number">2</span>*<span class="built_in">window</span>.innerWidth,canvasEl.height=<span class="number">2</span>*<span class="built_in">window</span>.innerHeight,canvasEl.style.width=<span class="built_in">window</span>.innerWidth+<span class="string">"px"</span>,canvasEl.style.height=<span class="built_in">window</span>.innerHeight+<span class="string">"px"</span>,canvasEl.getContext(<span class="string">"2d"</span>).scale(<span class="number">2</span>,<span class="number">2</span>)&#125;,<span class="number">500</span>),render=anime(&#123;<span class="attr">duration</span>:<span class="number">1</span>/<span class="number">0</span>,<span class="attr">update</span>:<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;ctx.clearRect(<span class="number">0</span>,<span class="number">0</span>,canvasEl.width,canvasEl.height)&#125;&#125;);<span class="built_in">document</span>.addEventListener(tap,<span class="function"><span class="keyword">function</span>(<span class="params">e</span>)</span>&#123;<span class="string">"sidebar"</span>!==e.target.id&amp;&amp;<span class="string">"toggle-sidebar"</span>!==e.target.id&amp;&amp;<span class="string">"A"</span>!==e.target.nodeName&amp;&amp;<span class="string">"IMG"</span>!==e.target.nodeName&amp;&amp;(render.play(),updateCoords(e),animateParticules(pointerX,pointerY))&#125;,!<span class="number">1</span>),setCanvasSize(),<span class="built_in">window</span>.addEventListener(<span class="string">"resize"</span>,setCanvasSize,!<span class="number">1</span>)&#125;<span class="string">"use strict"</span>;<span class="function"><span class="keyword">function</span> <span class="title">updateCoords</span>(<span class="params">e</span>)</span>&#123;pointerX=(e.clientX||e.touches[<span class="number">0</span>].clientX)-canvasEl.getBoundingClientRect().left,pointerY=e.clientY||e.touches[<span class="number">0</span>].clientY-canvasEl.getBoundingClientRect().top&#125;<span class="function"><span class="keyword">function</span> <span class="title">setParticuleDirection</span>(<span class="params">e</span>)</span>&#123;<span class="keyword">var</span> t=anime.random(<span class="number">0</span>,<span class="number">360</span>)*<span class="built_in">Math</span>.PI/<span class="number">180</span>,a=anime.random(<span class="number">50</span>,<span class="number">180</span>),n=[<span class="number">-1</span>,<span class="number">1</span>][anime.random(<span class="number">0</span>,<span class="number">1</span>)]*a;<span class="keyword">return</span>&#123;<span class="attr">x</span>:e.x+n*<span class="built_in">Math</span>.cos(t),<span class="attr">y</span>:e.y+n*<span class="built_in">Math</span>.sin(t)&#125;&#125;<span class="function"><span class="keyword">function</span> <span class="title">createParticule</span>(<span class="params">e,t</span>)</span>&#123;<span class="keyword">var</span> a=&#123;&#125;;<span class="keyword">return</span> a.x=e,a.y=t,a.color=colors[anime.random(<span class="number">0</span>,colors.length<span class="number">-1</span>)],a.radius=anime.random(<span class="number">16</span>,<span class="number">32</span>),a.endPos=setParticuleDirection(a),a.draw=<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;ctx.beginPath(),ctx.arc(a.x,a.y,a.radius,<span class="number">0</span>,<span class="number">2</span>*<span class="built_in">Math</span>.PI,!<span class="number">0</span>),ctx.fillStyle=a.color,ctx.fill()&#125;,a&#125;<span class="function"><span class="keyword">function</span> <span class="title">createCircle</span>(<span class="params">e,t</span>)</span>&#123;<span class="keyword">var</span> a=&#123;&#125;;<span class="keyword">return</span> a.x=e,a.y=t,a.color=<span class="string">"#F00"</span>,a.radius=<span class="number">0.1</span>,a.alpha=<span class="number">0.5</span>,a.lineWidth=<span class="number">6</span>,a.draw=<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;ctx.globalAlpha=a.alpha,ctx.beginPath(),ctx.arc(a.x,a.y,a.radius,<span class="number">0</span>,<span class="number">2</span>*<span class="built_in">Math</span>.PI,!<span class="number">0</span>),ctx.lineWidth=a.lineWidth,ctx.strokeStyle=a.color,ctx.stroke(),ctx.globalAlpha=<span class="number">1</span>&#125;,a&#125;<span class="function"><span class="keyword">function</span> <span class="title">renderParticule</span>(<span class="params">e</span>)</span>&#123;<span class="keyword">for</span>(<span class="keyword">var</span> t=<span class="number">0</span>;t&lt;e.animatables.length;t++)&#123;e.animatables[t].target.draw()&#125;&#125;<span class="function"><span class="keyword">function</span> <span class="title">animateParticules</span>(<span class="params">e,t</span>)</span>&#123;<span class="keyword">for</span>(<span class="keyword">var</span> a=createCircle(e,t),n=[],i=<span class="number">0</span>;i&lt;numberOfParticules;i++)&#123;n.push(createParticule(e,t))&#125;anime.timeline().add(&#123;<span class="attr">targets</span>:n,<span class="attr">x</span>:<span class="function"><span class="keyword">function</span>(<span class="params">e</span>)</span>&#123;<span class="keyword">return</span> e.endPos.x&#125;,<span class="attr">y</span>:<span class="function"><span class="keyword">function</span>(<span class="params">e</span>)</span>&#123;<span class="keyword">return</span> e.endPos.y&#125;,<span class="attr">radius</span>:<span class="number">0.1</span>,<span class="attr">duration</span>:anime.random(<span class="number">1200</span>,<span class="number">1800</span>),<span class="attr">easing</span>:<span class="string">"easeOutExpo"</span>,<span class="attr">update</span>:renderParticule&#125;).add(&#123;<span class="attr">targets</span>:a,<span class="attr">radius</span>:anime.random(<span class="number">80</span>,<span class="number">160</span>),<span class="attr">lineWidth</span>:<span class="number">0</span>,<span class="attr">alpha</span>:&#123;<span class="attr">value</span>:<span class="number">0</span>,<span class="attr">easing</span>:<span class="string">"linear"</span>,<span class="attr">duration</span>:anime.random(<span class="number">600</span>,<span class="number">800</span>)&#125;,<span class="attr">duration</span>:anime.random(<span class="number">1200</span>,<span class="number">1800</span>),<span class="attr">easing</span>:<span class="string">"easeOutExpo"</span>,<span class="attr">update</span>:renderParticule,<span class="attr">offset</span>:<span class="number">0</span>&#125;)&#125;<span class="function"><span class="keyword">function</span> <span class="title">debounce</span>(<span class="params">e,t</span>)</span>&#123;<span class="keyword">var</span> a;<span class="keyword">return</span> <span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;<span class="keyword">var</span> n=<span class="keyword">this</span>,i=<span class="built_in">arguments</span>;clearTimeout(a),a=setTimeout(<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;e.apply(n,i)&#125;,t)&#125;&#125;<span class="keyword">var</span> canvasEl=<span class="built_in">document</span>.querySelector(<span class="string">".fireworks"</span>);<span class="keyword">if</span>(canvasEl)&#123;<span class="keyword">var</span> ctx=canvasEl.getContext(<span class="string">"2d"</span>),numberOfParticules=<span class="number">30</span>,pointerX=<span class="number">0</span>,pointerY=<span class="number">0</span>,tap=<span class="string">"mousedown"</span>,colors=[<span class="string">"#FF1461"</span>,<span class="string">"#18FF92"</span>,<span class="string">"#5A87FF"</span>,<span class="string">"#FBF38C"</span>],setCanvasSize=debounce(<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;canvasEl.width=<span class="number">2</span>*<span class="built_in">window</span>.innerWidth,canvasEl.height=<span class="number">2</span>*<span class="built_in">window</span>.innerHeight,canvasEl.style.width=<span class="built_in">window</span>.innerWidth+<span class="string">"px"</span>,canvasEl.style.height=<span class="built_in">window</span>.innerHeight+<span class="string">"px"</span>,canvasEl.getContext(<span class="string">"2d"</span>).scale(<span class="number">2</span>,<span class="number">2</span>)&#125;,<span class="number">500</span>),render=anime(&#123;<span class="attr">duration</span>:<span class="number">1</span>/<span class="number">0</span>,<span class="attr">update</span>:<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;ctx.clearRect(<span class="number">0</span>,<span class="number">0</span>,canvasEl.width,canvasEl.height)&#125;&#125;);<span class="built_in">document</span>.addEventListener(tap,<span class="function"><span class="keyword">function</span>(<span class="params">e</span>)</span>&#123;<span class="string">"sidebar"</span>!==e.target.id&amp;&amp;<span class="string">"toggle-sidebar"</span>!==e.target.id&amp;&amp;<span class="string">"A"</span>!==e.target.nodeName&amp;&amp;<span class="string">"IMG"</span>!==e.target.nodeName&amp;&amp;(render.play(),updateCoords(e),animateParticules(pointerX,pointerY))&#125;,!<span class="number">1</span>),setCanvasSize(),<span class="built_in">window</span>.addEventListener(<span class="string">"resize"</span>,setCanvasSize,!<span class="number">1</span>)&#125;;</span><br></pre></td></tr></table></figure><p>　　然后在<code>H:/blog/themes/next/layout/_layout.swig</code>文件中，<code>&lt;/head&gt;</code>之前加入以下代码：</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!-- 爆炸红心效果 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">canvas</span> <span class="attr">class</span>=<span class="string">"fireworks"</span> <span class="attr">style</span>=<span class="string">"position: fixed;left: 0;top: 0;z-index: 1; pointer-events: none;"</span> &gt;</span><span class="tag">&lt;/<span class="name">canvas</span>&gt;</span> </span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">"text/javascript"</span> <span class="attr">src</span>=<span class="string">"//cdn.bootcss.com/animejs/2.2.0/anime.min.js"</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span> </span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">"text/javascript"</span> <span class="attr">src</span>=<span class="string">"/js/src/yanhuatexiao.js"</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><p><img src="/2019/07/22/定制Hexo-NexT的个性化博客/%E9%BC%A0%E6%A0%87%E7%89%B9%E6%95%88%E4%BB%A3%E7%A0%81.png" alt></p><p>　　还可以换成点击出现爱心的特效,方法是一样的。</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">!<span class="function"><span class="keyword">function</span>(<span class="params">e,t,a</span>)</span>&#123;<span class="function"><span class="keyword">function</span> <span class="title">n</span>(<span class="params"></span>)</span>&#123;c(<span class="string">".heart&#123;width: 10px;height: 10px;position: fixed;background: #f00;transform: rotate(45deg);-webkit-transform: rotate(45deg);-moz-transform: rotate(45deg);&#125;.heart:after,.heart:before&#123;content: '';width: inherit;height: inherit;background: inherit;border-radius: 50%;-webkit-border-radius: 500%;-moz-border-radius: 50%;position: fixed;&#125;.heart:after&#123;top: -5px;&#125;.heart:before&#123;left: -5px;&#125;"</span>),o(),r()&#125;<span class="function"><span class="keyword">function</span> <span class="title">r</span>(<span class="params"></span>)</span>&#123;<span class="keyword">for</span>(<span class="keyword">var</span> e=<span class="number">0</span>;e&lt;d.length;e++)d[e].alpha&lt;=<span class="number">0</span>?(t.body.removeChild(d[e].el),d.splice(e,<span class="number">1</span>)):(d[e].y--,d[e].scale+=<span class="number">.004</span>,d[e].alpha-=<span class="number">.013</span>,d[e].el.style.cssText=<span class="string">"left:"</span>+d[e].x+<span class="string">"px;top:"</span>+d[e].y+<span class="string">"px;opacity:"</span>+d[e].alpha+<span class="string">";transform:scale("</span>+d[e].scale+<span class="string">","</span>+d[e].scale+<span class="string">") rotate(45deg);background:"</span>+d[e].color+<span class="string">";z-index:99999"</span>);requestAnimationFrame(r)&#125;<span class="function"><span class="keyword">function</span> <span class="title">o</span>(<span class="params"></span>)</span>&#123;<span class="keyword">var</span> t=<span class="string">"function"</span>==<span class="keyword">typeof</span> e.onclick&amp;&amp;e.onclick;e.οnclick=<span class="function"><span class="keyword">function</span>(<span class="params">e</span>)</span>&#123;t&amp;&amp;t(),i(e)&#125;&#125;<span class="function"><span class="keyword">function</span> <span class="title">i</span>(<span class="params">e</span>)</span>&#123;<span class="keyword">var</span> a=t.createElement(<span class="string">"div"</span>);a.className=<span class="string">"heart"</span>,d.push(&#123;<span class="attr">el</span>:a,<span class="attr">x</span>:e.clientX<span class="number">-5</span>,<span class="attr">y</span>:e.clientY<span class="number">-5</span>,<span class="attr">scale</span>:<span class="number">1</span>,<span class="attr">alpha</span>:<span class="number">1</span>,<span class="attr">color</span>:s()&#125;),t.body.appendChild(a)&#125;<span class="function"><span class="keyword">function</span> <span class="title">c</span>(<span class="params">e</span>)</span>&#123;<span class="keyword">var</span> a=t.createElement(<span class="string">"style"</span>);a.type=<span class="string">"text/css"</span>;<span class="keyword">try</span>&#123;a.appendChild(t.createTextNode(e))&#125;<span class="keyword">catch</span>(t)&#123;a.styleSheet.cssText=e&#125;t.getElementsByTagName(<span class="string">"head"</span>)[<span class="number">0</span>].appendChild(a)&#125;<span class="function"><span class="keyword">function</span> <span class="title">s</span>(<span class="params"></span>)</span>&#123;<span class="keyword">return</span><span class="string">"rgb("</span>+~~(<span class="number">255</span>*<span class="built_in">Math</span>.random())+<span class="string">","</span>+~~(<span class="number">255</span>*<span class="built_in">Math</span>.random())+<span class="string">","</span>+~~(<span class="number">255</span>*<span class="built_in">Math</span>.random())+<span class="string">")"</span>&#125;<span class="keyword">var</span> d=[];e.requestAnimationFrame=<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;<span class="keyword">return</span> e.requestAnimationFrame||e.webkitRequestAnimationFrame||e.mozRequestAnimationFrame||e.oRequestAnimationFrame||e.msRequestAnimationFrame||<span class="function"><span class="keyword">function</span>(<span class="params">e</span>)</span>&#123;setTimeout(e,<span class="number">1e3</span>/<span class="number">60</span>)&#125;&#125;(),n()&#125;(<span class="built_in">window</span>,<span class="built_in">document</span>);</span><br></pre></td></tr></table></figure><h4 id="修改超链接的颜色"><a href="#修改超链接的颜色" class="headerlink" title="修改超链接的颜色"></a>修改超链接的颜色</h4><p>效果图</p><p><img src="/2019/07/22/定制Hexo-NexT的个性化博客/%E8%B6%85%E9%93%BE%E6%8E%A5%E6%BC%94%E7%A4%BA.gif" alt></p><p>实现方法</p><p>　　打开<code>H:\blog\themes\next\source\css\_common\components\post</code>文件夹下的<code>post.styl</code>,添加以下css样式：</p><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.post-body</span> <span class="selector-tag">p</span> <span class="selector-tag">a</span> &#123;</span><br><span class="line">  <span class="attribute">color</span>: <span class="number">#0593d3</span>;</span><br><span class="line">  <span class="attribute">border-bottom</span>: none;</span><br><span class="line">  &amp;:hover &#123;</span><br><span class="line">    <span class="attribute">color</span>: <span class="number">#fc6423</span>;</span><br><span class="line">    <span class="attribute">text-decoration</span>: underline;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>　　其中选择<code>.post-body</code> 是为了不影响标题，选择 <code>p</code> 是为了不影响首页“阅读全文”的显示样式,颜色可以自己定义。</p><h4 id="文章结尾添加结束标记"><a href="#文章结尾添加结束标记" class="headerlink" title="文章结尾添加结束标记"></a>文章结尾添加结束标记</h4><p>效果图</p><p><img src="/2019/07/22/定制Hexo-NexT的个性化博客/%E9%98%85%E8%AF%BB%E7%BB%93%E6%9D%9F%E6%A0%87%E5%BF%97.png" alt></p><p>实现方法</p><p>　　打开<code>H:/blog/themes/next/layout/_macro</code>文件夹，新建<code>passage-end-tag.swig</code> 文件,并添加以下内容：</p><figure class="highlight django"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">div</span>&gt;</span></span></span><br><span class="line"><span class="xml">    </span><span class="template-tag">&#123;% <span class="name"><span class="name">if</span></span> not is_index %&#125;</span><span class="xml"></span></span><br><span class="line"><span class="xml">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">style</span>=<span class="string">"text-align:center;color: #ccc;font-size:14px;"</span>&gt;</span>-------------本文结束<span class="tag">&lt;<span class="name">i</span> <span class="attr">class</span>=<span class="string">"fa fa-paw"</span>&gt;</span><span class="tag">&lt;/<span class="name">i</span>&gt;</span>感谢您的阅读-------------<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line"><span class="xml">    </span><span class="template-tag">&#123;% <span class="name"><span class="name">endif</span></span> %&#125;</span><span class="xml"></span></span><br><span class="line"><span class="xml"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br></pre></td></tr></table></figure><p>　　然后打开<code>H:/blog/themes/next/layout/_macro/post.swig</code>文件，在<code>post-body</code> 之后， <code>post-footer</code> 之前添加以下代码：</p><figure class="highlight django"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">div</span>&gt;</span></span></span><br><span class="line"><span class="xml">  </span><span class="template-tag">&#123;% <span class="name"><span class="name">if</span></span> not is_index %&#125;</span><span class="xml"></span></span><br><span class="line"><span class="xml">    </span><span class="template-tag">&#123;% <span class="name"><span class="name">include</span></span> 'passage-end-tag.swig' %&#125;</span><span class="xml"></span></span><br><span class="line"><span class="xml">  </span><span class="template-tag">&#123;% <span class="name"><span class="name">endif</span></span> %&#125;</span><span class="xml"></span></span><br><span class="line"><span class="xml"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br></pre></td></tr></table></figure><p><img src="/2019/07/22/定制Hexo-NexT的个性化博客/%E9%98%85%E8%AF%BB%E7%BB%93%E6%9D%9F%E6%A0%87%E5%BF%97%E4%BB%A3%E7%A0%81.png" alt></p><p>　　接着在<code>H:/blog/themes/next/_config.yml</code>末尾添加：</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 文章末尾添加“本文结束”标记</span></span><br><span class="line"><span class="attr">passage_end_tag:</span></span><br><span class="line"><span class="attr">  enabled:</span> <span class="literal">true</span></span><br></pre></td></tr></table></figure><h4 id="修改文章底部带-号的标签"><a href="#修改文章底部带-号的标签" class="headerlink" title="修改文章底部带#号的标签"></a>修改文章底部带#号的标签</h4><p>效果图</p><p><img src="/2019/07/22/定制Hexo-NexT的个性化博客/%E5%B8%A6#%E6%A0%87%E7%AD%BE.jpg" alt></p><p>实现方法</p><p>　　修改<code>H:/blog/themes/next/layout/_macro/post.swig</code>，搜索 <code>rel=&quot;tag&quot;&gt;#</code>，将 # 换成<code>&lt;i class=&quot;fa fa-tag&quot;&gt;&lt;/i&gt;</code></p><p><img src="/2019/07/22/定制Hexo-NexT的个性化博客/%E5%B8%A6#%E6%A0%87%E7%AD%BE%E4%BB%A3%E7%A0%81.jpg" alt></p><h4 id="设置博客头像并旋转"><a href="#设置博客头像并旋转" class="headerlink" title="设置博客头像并旋转"></a>设置博客头像并旋转</h4><p>效果图</p><p><img src="/2019/07/22/定制Hexo-NexT的个性化博客/%E5%A4%B4%E5%83%8F%E6%97%8B%E8%BD%AC%E6%BC%94%E7%A4%BA.gif" alt></p><p>实现方法</p><p>　　打开<code>H:/blog/themes/next/source/images</code>,把头像放到该目录下，然后打开<code>H:/blog/_config.yml</code>,找到<code>avatar:</code>，修改为以下内容：</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">avatar:</span></span><br><span class="line">  <span class="comment"># In theme directory (source/images): /images/avatar.gif</span></span><br><span class="line">  <span class="comment"># In site directory (source/uploads): /uploads/avatar.gif</span></span><br><span class="line">  <span class="comment"># You can also use other linking images.</span></span><br><span class="line"><span class="attr">  url:</span> <span class="string">/images/avatar.gif</span></span><br><span class="line">  <span class="comment"># If true, the avatar would be dispalyed in circle.</span></span><br><span class="line"><span class="attr">  rounded:</span> <span class="literal">true</span></span><br><span class="line">  <span class="comment"># The value of opacity should be choose from 0 to 1 to set the opacity of the avatar.</span></span><br><span class="line"><span class="attr">  opacity:</span> <span class="number">1</span></span><br><span class="line">  <span class="comment"># If true, the avatar would be rotated with the cursor.</span></span><br><span class="line"><span class="attr">  rotated:</span> <span class="literal">true</span></span><br></pre></td></tr></table></figure><h4 id="快速实现博客压缩"><a href="#快速实现博客压缩" class="headerlink" title="快速实现博客压缩"></a>快速实现博客压缩</h4><p>　　项目压缩也叫<code>代码丑化</code>, 分别对 html、css、js、images进行优化，即把重复的代码合并，把多余的空格去掉，用算法把 images 进行压缩。压缩后的博客，加载速度会有较大的提升，自然能留住更多游客。</p><p>　　蛮多朋友使用了<code>gulp</code>对博客进行压缩，这也是一个办法，但在社区逛了下，找到了一个比较好用的模块<a href="https://github.com/chenzhutian/hexo-all-minifier" target="_blank" rel="noopener">hexo-all-minifier</a>，这个模块集成了对 html、css、js、image 的优化。</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm <span class="keyword">install</span> hexo-<span class="keyword">all</span>-minifier <span class="comment">--save</span></span><br></pre></td></tr></table></figure><p>　　安装上此模块后，只要在根目录下的_config.yml文件中加上如下字段就可对博客所有内容进行压缩。</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">html_minifier:</span></span><br><span class="line"><span class="attr">  enable:</span> <span class="literal">true</span></span><br><span class="line"><span class="attr">  ignore_error:</span> <span class="literal">false</span></span><br><span class="line"><span class="attr">  exclude:</span></span><br><span class="line"></span><br><span class="line"><span class="attr">css_minifier:</span></span><br><span class="line"><span class="attr">  enable:</span> <span class="literal">true</span></span><br><span class="line"><span class="attr">  exclude:</span></span><br><span class="line"><span class="bullet">    -</span> <span class="string">'*.min.css'</span></span><br><span class="line"></span><br><span class="line"><span class="attr">js_minifier:</span></span><br><span class="line"><span class="attr">  enable:</span> <span class="literal">true</span></span><br><span class="line"><span class="attr">  mangle:</span> <span class="literal">true</span></span><br><span class="line"><span class="attr">  output:</span></span><br><span class="line"><span class="attr">  compress:</span></span><br><span class="line"><span class="attr">  exclude:</span></span><br><span class="line"><span class="bullet">    -</span> <span class="string">'*.min.js'</span></span><br><span class="line"></span><br><span class="line"><span class="attr">image_minifier:</span></span><br><span class="line"><span class="attr">  enable:</span> <span class="literal">true</span></span><br><span class="line"><span class="attr">  interlaced:</span> <span class="literal">false</span></span><br><span class="line"><span class="attr">  multipass:</span> <span class="literal">false</span></span><br><span class="line"><span class="attr">  optimizationLevel:</span> <span class="number">2</span></span><br><span class="line"><span class="attr">  pngquant:</span> <span class="literal">false</span></span><br><span class="line"><span class="attr">  progressive:</span> <span class="literal">false</span></span><br></pre></td></tr></table></figure><h4 id="侧边栏添加社交图标"><a href="#侧边栏添加社交图标" class="headerlink" title="侧边栏添加社交图标"></a>侧边栏添加社交图标</h4><p>效果图</p><p><img src="/2019/07/22/定制Hexo-NexT的个性化博客/%E7%A4%BE%E4%BA%A4%E5%B0%8F%E5%9B%BE%E6%A0%87.png" alt></p><p>实现方法</p><p>　　打开主题配置文件<code>_config.yml</code>，搜索<code>social:</code>,在<a href="http://fontawesome.io/icons/" target="_blank" rel="noopener">图标库</a>找自己喜欢的小图标，并将名字复制在如下位置，保存即可</p><p><img src="/2019/07/22/定制Hexo-NexT的个性化博客/%E7%A4%BE%E4%BA%A4%E5%B0%8F%E5%9B%BE%E6%A0%87%E4%BB%A3%E7%A0%81.png" alt></p><h4 id="主页文章添加阴影效果"><a href="#主页文章添加阴影效果" class="headerlink" title="主页文章添加阴影效果"></a>主页文章添加阴影效果</h4><p>效果图</p><p><img src="/2019/07/22/定制Hexo-NexT的个性化博客/%E9%98%B4%E5%BD%B1%E6%95%88%E6%9E%9C%E5%9B%BE.png" alt></p><p>实现方法</p><p>　　打开<code>H:\blog\themes\next\source\css\_common\components\post</code>文件夹下的<code>post.styl</code>,添加以下css样式：</p><figure class="highlight scss"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 主页文章添加阴影效果</span></span><br><span class="line"> <span class="selector-class">.post</span> &#123;</span><br><span class="line">   <span class="attribute">margin-top</span>: <span class="number">0px</span>;</span><br><span class="line">   <span class="attribute">margin-bottom</span>: <span class="number">60px</span>;</span><br><span class="line">   <span class="attribute">padding</span>: <span class="number">25px</span>;</span><br><span class="line">   -webkit-<span class="attribute">box-shadow</span>: <span class="number">0</span> <span class="number">0</span> <span class="number">5px</span> rgba(<span class="number">202</span>, <span class="number">203</span>, <span class="number">203</span>, .<span class="number">5</span>);</span><br><span class="line">   -moz-<span class="attribute">box-shadow</span>: <span class="number">0</span> <span class="number">0</span> <span class="number">5px</span> rgba(<span class="number">202</span>, <span class="number">203</span>, <span class="number">204</span>, .<span class="number">5</span>);</span><br><span class="line">  &#125;</span><br></pre></td></tr></table></figure><h4 id="在博客底部添加访问量"><a href="#在博客底部添加访问量" class="headerlink" title="在博客底部添加访问量"></a>在博客底部添加访问量</h4><p>效果图</p><p><img src="/2019/07/22/定制Hexo-NexT的个性化博客/%E5%BA%95%E9%83%A8%E8%AE%BF%E9%97%AE%E9%87%8F.png" alt></p><p>实现方法</p><p>　　打开<code>H:/blog/themes/next/_config.yml</code>,找到<code>busuanzi</code>，修改为以下参数：</p><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">busuanzi_count:</span><br><span class="line">  enable: <span class="literal">true</span></span><br><span class="line">  total_visitors: <span class="literal">true</span></span><br><span class="line">  total_visitors_icon: user</span><br><span class="line">  total_views: <span class="literal">true</span></span><br><span class="line">  total_views_icon: eye</span><br></pre></td></tr></table></figure><h4 id="使用leancloud统计页面访问次数"><a href="#使用leancloud统计页面访问次数" class="headerlink" title="使用leancloud统计页面访问次数"></a>使用leancloud统计页面访问次数</h4><p>效果图</p><p><img src="/2019/07/22/定制Hexo-NexT的个性化博客/%E7%83%AD%E5%BA%A6.png" alt></p><p>实现方法</p><p>　　主题集成了leancloud，但是我们还需要去<a href="https://leancloud.cn/" target="_blank" rel="noopener">官网</a>注册账号并实名，这里讲一下关键的步骤。</p><h5 id="配置leancloud"><a href="#配置leancloud" class="headerlink" title="配置leancloud"></a>配置leancloud</h5><ul><li>创建应用：<code>控制台——创建应用（开发版）</code></li></ul><p>应用名称可以随意输入，后面还可以修改，我的是blog</p><ul><li>创建class：</li></ul><p>　　点击刚创建的应用，创建一个 Class 表用来保存我们的博客访问数据。此处创建的 Class 名字必须为 <code>Counter</code>，ACL 权限选择 <code>无限制</code>。</p><ul><li>创建 Class 完成之后，新创建的 Counter 表会显示在左侧，这时再切换到 test 应用的 <code>设置 - 应用 Key</code> 界面：</li></ul><p><img src="/2019/07/22/定制Hexo-NexT的个性化博客/leancloud%E8%AE%BE%E7%BD%AE.png" alt></p><ul><li>复制ID和Key</li></ul><p><img src="/2019/07/22/定制Hexo-NexT的个性化博客/leanleancloud%E8%AE%BE%E7%BD%AEkey.png" alt></p><h5 id="启用leancloud"><a href="#启用leancloud" class="headerlink" title="启用leancloud"></a>启用leancloud</h5><p>　　打开<code>_config.yml</code>主题配置文件，找到<code>leancloud_visitors:</code>,填入id和key。</p><p><img src="/2019/07/22/定制Hexo-NexT的个性化博客/leanleancloud%E8%AE%BE%E7%BD%AEkey%E4%BB%A3%E7%A0%81.png" alt></p><h5 id="修改热度"><a href="#修改热度" class="headerlink" title="修改热度"></a>修改热度</h5><p>　　打开<code>H:/blog/themes/next/layout/_macro/post.swig</code>文件，找到<code>leancloud</code>,修改成如下代码：</p><p><img src="/2019/07/22/定制Hexo-NexT的个性化博客/%E7%83%AD%E5%BA%A6%E4%BB%A3%E7%A0%81.png" alt></p><p>　　最后打开<code>H:/blog/themes/next/languages/zh-CN.yml</code>,把views参数改成如下：</p><p><img src="/2019/07/22/定制Hexo-NexT的个性化博客/%E7%83%AD%E5%BA%A6%E8%AE%BE%E7%BD%AE.png" alt></p><h4 id="博客标题设置"><a href="#博客标题设置" class="headerlink" title="博客标题设置"></a>博客标题设置</h4><p>　　这个相关的设置在<code>H:/blog/_config.yml</code>中修改，如下图所示：</p><p><img src="/2019/07/22/定制Hexo-NexT的个性化博客/%E5%8D%9A%E5%AE%A2%E6%A0%87%E9%A2%98%E8%AE%BE%E7%BD%AE.png" alt></p><h4 id="博客底部添加网站的运行时间"><a href="#博客底部添加网站的运行时间" class="headerlink" title="博客底部添加网站的运行时间"></a>博客底部添加网站的运行时间</h4><p>效果图</p><p><img src="/2019/07/22/定制Hexo-NexT的个性化博客/%E5%BA%95%E9%83%A8%E8%AE%BF%E9%97%AE%E9%87%8F.png" alt></p><p>实现方法</p><p>　　打开<code>H:/blog/themes/next/layout/_partials/footer.swig</code>，在末尾添加如下代码;</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!-- 网站运行时间的设置 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">span</span> <span class="attr">id</span>=<span class="string">"timeDate"</span>&gt;</span>载入天数...<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">span</span> <span class="attr">id</span>=<span class="string">"times"</span>&gt;</span>载入时分秒...<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="javascript">    <span class="keyword">var</span> now = <span class="keyword">new</span> <span class="built_in">Date</span>();</span></span><br><span class="line"><span class="actionscript">    <span class="function"><span class="keyword">function</span> <span class="title">createtime</span><span class="params">()</span> </span>&#123;</span></span><br><span class="line"><span class="javascript">        <span class="keyword">var</span> grt= <span class="keyword">new</span> <span class="built_in">Date</span>(<span class="string">"07/12/2019 18:30:00"</span>);<span class="comment">//此处修改你的建站时间或者网站上线时间</span></span></span><br><span class="line">        now.setTime(now.getTime()+250);</span><br><span class="line"><span class="javascript">        days = (now - grt ) / <span class="number">1000</span> / <span class="number">60</span> / <span class="number">60</span> / <span class="number">24</span>; dnum = <span class="built_in">Math</span>.floor(days);</span></span><br><span class="line"><span class="javascript">        hours = (now - grt ) / <span class="number">1000</span> / <span class="number">60</span> / <span class="number">60</span> - (<span class="number">24</span> * dnum); hnum = <span class="built_in">Math</span>.floor(hours);</span></span><br><span class="line"><span class="javascript">        <span class="keyword">if</span>(<span class="built_in">String</span>(hnum).length ==<span class="number">1</span> )&#123;hnum = <span class="string">"0"</span> + hnum;&#125; minutes = (now - grt ) / <span class="number">1000</span> /<span class="number">60</span> - (<span class="number">24</span> * <span class="number">60</span> * dnum) - (<span class="number">60</span> * hnum);</span></span><br><span class="line"><span class="javascript">        mnum = <span class="built_in">Math</span>.floor(minutes); <span class="keyword">if</span>(<span class="built_in">String</span>(mnum).length ==<span class="number">1</span> )&#123;mnum = <span class="string">"0"</span> + mnum;&#125;</span></span><br><span class="line">        seconds = (now - grt ) / 1000 - (24 * 60 * 60 * dnum) - (60 * 60 * hnum) - (60 * mnum);</span><br><span class="line"><span class="javascript">        snum = <span class="built_in">Math</span>.round(seconds); <span class="keyword">if</span>(<span class="built_in">String</span>(snum).length ==<span class="number">1</span> )&#123;snum = <span class="string">"0"</span> + snum;&#125;</span></span><br><span class="line"><span class="javascript">        <span class="built_in">document</span>.getElementById(<span class="string">"timeDate"</span>).innerHTML = <span class="string">"网站已运行 "</span>+dnum+<span class="string">" 天 "</span>;</span></span><br><span class="line"><span class="javascript">        <span class="built_in">document</span>.getElementById(<span class="string">"times"</span>).innerHTML = hnum + <span class="string">" 小时 "</span> + mnum + <span class="string">" 分 "</span> + snum + <span class="string">" 秒"</span>;</span></span><br><span class="line">    &#125;</span><br><span class="line"><span class="actionscript">setInterval(<span class="string">"createtime()"</span>,<span class="number">250</span>);</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><h4 id="添加-README-md-文件"><a href="#添加-README-md-文件" class="headerlink" title="添加 README.md 文件"></a>添加 README.md 文件</h4><p>　　每个项目下一般都有一个 <code>README.md</code> 文件，但是使用 hexo 部署到仓库后，项目下是没有 <code>README.md</code> 文件的。</p><p>　　在 Hexo 目录下的 <code>source</code> 根目录下添加一个 <code>README.md</code> 文件，修改站点配置文件 _<code>config.yml</code>，将 <code>skip_render</code> 参数的值设置为<code>skip_render: README.md</code></p><p>　　保存退出即可。再次使用 <code>hexo d</code> 命令部署博客的时候就不会在渲染 README.md 这个文件了。</p><h4 id="自定义网站的图标"><a href="#自定义网站的图标" class="headerlink" title="自定义网站的图标"></a>自定义网站的图标</h4><p>效果图</p><p><img src="/2019/07/22/定制Hexo-NexT的个性化博客/%E7%BD%91%E7%AB%99%E5%9B%BE%E6%A0%87.png" alt></p><p>实现方法</p><p>　　我的图标是在<a href="https://www.iconfont.cn/" target="_blank" rel="noopener">阿里矢量图标库</a>下载的，你也可以在其他地方下载或者制作，然后把图标放在<code>H：/blog/themes/next/source/images</code>里面，斌且修改主题配置文件：</p><figure class="highlight dts"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="symbol">favicon:</span></span><br><span class="line"><span class="symbol">  small:</span> <span class="meta-keyword">/images/</span>favicon<span class="number">-16</span>x16-next.png</span><br><span class="line"><span class="symbol">  medium:</span> <span class="meta-keyword">/images/</span>favicon<span class="number">-32</span>x32-next.png</span><br><span class="line"><span class="symbol">  apple_touch_icon:</span> <span class="meta-keyword">/images/</span>apple-touch-icon-next.png</span><br><span class="line"><span class="symbol">  safari_pinned_tab:</span> <span class="meta-keyword">/images/</span>logo.svg</span><br><span class="line">  <span class="meta">#android_manifest: /images/manifest.json</span></span><br><span class="line">  <span class="meta">#ms_browserconfig: /images/browserconfig.xml</span></span><br></pre></td></tr></table></figure><h4 id="文章字数、阅读时长统计"><a href="#文章字数、阅读时长统计" class="headerlink" title="文章字数、阅读时长统计"></a>文章字数、阅读时长统计</h4><p>效果图</p><p><img src="/2019/07/22/定制Hexo-NexT的个性化博客/%E7%83%AD%E5%BA%A6.png" alt></p><p>实现效果</p><p>　　　打开博客根目录，运行以下命令，安装插件</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm <span class="keyword">install</span> hexo-symbols-<span class="keyword">count</span>-<span class="built_in">time</span> <span class="comment">--save</span></span><br></pre></td></tr></table></figure><p>　　然后修改博客配置文件，在末尾添加以下代码：</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">symbols_count_time:</span></span><br><span class="line"><span class="attr">  symbols:</span> <span class="literal">true</span>                <span class="comment"># 文章字数统计</span></span><br><span class="line"><span class="attr">  time:</span> <span class="literal">true</span>                   <span class="comment"># 文章阅读时长</span></span><br><span class="line"><span class="attr">  total_symbols:</span> <span class="literal">true</span>          <span class="comment"># 站点总字数统计</span></span><br><span class="line"><span class="attr">  total_time:</span> <span class="literal">true</span>             <span class="comment"># 站点总阅读时长</span></span><br><span class="line"><span class="attr">  exclude_codeblock:</span> <span class="literal">false</span>     <span class="comment"># 排除代码字数统计</span></span><br></pre></td></tr></table></figure><p>　　最后在主题配置文件里面，找到<code>symbols_count_time</code>,修改成以下内容：</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">symbols_count_time:</span></span><br><span class="line"><span class="attr">  separated_meta:</span> <span class="literal">true</span>     <span class="comment"># 是否另起一行（true的话不和发表时间等同一行）</span></span><br><span class="line"><span class="attr">  item_text_post:</span> <span class="literal">true</span>     <span class="comment"># 首页文章统计数量前是否显示文字描述（本文字数、阅读时长）</span></span><br><span class="line"><span class="attr">  item_text_total:</span> <span class="literal">true</span>    <span class="comment"># 页面底部统计数量前是否显示文字描述（站点总字数、站点阅读时长）</span></span><br><span class="line"><span class="attr">  awl:</span> <span class="number">1.5</span>                 <span class="comment"># Average Word Length</span></span><br><span class="line"><span class="attr">  wpm:</span> <span class="number">100</span>                 <span class="comment"># Words Per Minute（每分钟阅读词数）</span></span><br><span class="line"><span class="attr">  suffix:</span> <span class="string">mins.</span></span><br></pre></td></tr></table></figure><h4 id="博客顶端添加加载条"><a href="#博客顶端添加加载条" class="headerlink" title="博客顶端添加加载条"></a>博客顶端添加加载条</h4><p>效果图</p><p><img src="/2019/07/22/定制Hexo-NexT的个性化博客/%E5%8D%9A%E5%AE%A2%E9%A1%B6%E7%AB%AF%E5%8A%A0%E8%BD%BD%E6%9D%A1.gif" alt></p><p>实现方法</p><p>　　打开主题配置文件，找到<code>pace:</code>，修改为以下内容：</p><figure class="highlight xl"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">pace: <span class="literal">true</span></span><br><span class="line"># Themes list:</span><br><span class="line"># pace-<span class="built_in">theme</span>-big-counter | pace-<span class="built_in">theme</span>-bounce | pace-<span class="built_in">theme</span>-barber-shop | pace-<span class="built_in">theme</span>-center-atom</span><br><span class="line"># pace-<span class="built_in">theme</span>-center-<span class="built_in">circle</span> | pace-<span class="built_in">theme</span>-center-radar | pace-<span class="built_in">theme</span>-center-simple | pace-<span class="built_in">theme</span>-corner-indicator</span><br><span class="line"># pace-<span class="built_in">theme</span>-fill-left | pace-<span class="built_in">theme</span>-flash | pace-<span class="built_in">theme</span>-loading-bar | pace-<span class="built_in">theme</span>-mac-osx | pace-<span class="built_in">theme</span>-minimal</span><br><span class="line">pace_theme: pace-<span class="built_in">theme</span>-minimal</span><br></pre></td></tr></table></figure><h4 id="在文章底部添加版权信息"><a href="#在文章底部添加版权信息" class="headerlink" title="在文章底部添加版权信息"></a>在文章底部添加版权信息</h4><p>效果图</p><p><img src="/2019/07/22/定制Hexo-NexT的个性化博客/%E7%89%88%E6%9D%83%E4%BF%A1%E6%81%AF.png" alt></p><p>实现方法</p><p>　　打开<code>H：/blog/themes/next/layout/_macro</code>，添加<code>my-copyright.swig</code>，代码如下：</p><figure class="highlight django"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="xml"></span><span class="template-tag">&#123;% <span class="name"><span class="name">if</span></span> page.copyright %&#125;</span><span class="xml"></span></span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"my_post_copyright"</span>&gt;</span></span></span><br><span class="line"><span class="xml">  <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">"//cdn.bootcss.com/clipboard.js/1.5.10/clipboard.min.js"</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span></span><br><span class="line"><span class="xml">  </span></span><br><span class="line"><span class="xml">  <span class="comment">&lt;!-- JS库 sweetalert 可修改路径 --&gt;</span></span></span><br><span class="line"><span class="xml">  <span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">"text/javascript"</span> <span class="attr">src</span>=<span class="string">"http://jslibs.wuxubj.cn/sweetalert_mini/jquery-1.7.1.min.js"</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span></span><br><span class="line"><span class="xml">  <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">"http://jslibs.wuxubj.cn/sweetalert_mini/sweetalert.min.js"</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span></span><br><span class="line"><span class="xml">  <span class="tag">&lt;<span class="name">link</span> <span class="attr">rel</span>=<span class="string">"stylesheet"</span> <span class="attr">type</span>=<span class="string">"text/css"</span> <span class="attr">href</span>=<span class="string">"http://jslibs.wuxubj.cn/sweetalert_mini/sweetalert.mini.css"</span>&gt;</span></span></span><br><span class="line"><span class="xml"></span></span><br><span class="line"><span class="xml">  <span class="tag">&lt;<span class="name">p</span>&gt;</span><span class="tag">&lt;<span class="name">span</span>&gt;</span>本文标题:<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><span class="template-variable">&#123;&#123; page.title &#125;&#125;</span><span class="xml"><span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">p</span>&gt;</span></span></span><br><span class="line"><span class="xml">  <span class="tag">&lt;<span class="name">p</span>&gt;</span><span class="tag">&lt;<span class="name">span</span>&gt;</span>文章作者:<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><span class="template-variable">&#123;&#123; theme.author &#125;&#125;</span><span class="xml"><span class="tag">&lt;/<span class="name">a</span>&gt;</span> | 【公众号：不会代码的程序猿】<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span></span><br><span class="line"><span class="xml">  <span class="tag">&lt;<span class="name">p</span>&gt;</span><span class="tag">&lt;<span class="name">span</span>&gt;</span>发布时间:<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><span class="template-variable">&#123;&#123; page.date.format("YYYY年MM月DD日 HH:mm:ss") &#125;&#125;</span><span class="xml"><span class="tag">&lt;/<span class="name">p</span>&gt;</span></span></span><br><span class="line"><span class="xml">  <span class="tag">&lt;<span class="name">p</span>&gt;</span><span class="tag">&lt;<span class="name">span</span>&gt;</span>最后更新:<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><span class="template-variable">&#123;&#123; page.updated.format("YYYY年MM月DD日 HH:mm:ss") &#125;&#125;</span><span class="xml"><span class="tag">&lt;/<span class="name">p</span>&gt;</span></span></span><br><span class="line"><span class="xml">  <span class="tag">&lt;<span class="name">p</span>&gt;</span><span class="tag">&lt;<span class="name">span</span>&gt;</span>原始链接:<span class="tag">&lt;/<span class="name">span</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"</span></span></span><span class="template-variable">&#123;&#123; url_for(page.path) &#125;&#125;</span><span class="xml"><span class="tag"><span class="string">"</span> <span class="attr">title</span>=<span class="string">"</span></span></span><span class="template-variable">&#123;&#123; page.title &#125;&#125;</span><span class="xml"><span class="tag"><span class="string">"</span>&gt;</span></span><span class="template-variable">&#123;&#123; page.permalink &#125;&#125;</span><span class="xml"><span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">p</span>&gt;</span></span></span><br><span class="line"><span class="xml">  <span class="tag">&lt;<span class="name">p</span>&gt;</span><span class="tag">&lt;<span class="name">span</span>&gt;</span>许可协议:<span class="tag">&lt;/<span class="name">span</span>&gt;</span><span class="tag">&lt;<span class="name">i</span> <span class="attr">class</span>=<span class="string">"fa fa-creative-commons"</span>&gt;</span><span class="tag">&lt;/<span class="name">i</span>&gt;</span> <span class="tag">&lt;<span class="name">a</span> <span class="attr">rel</span>=<span class="string">"license"</span> <span class="attr">href</span>=<span class="string">"https://creativecommons.org/licenses/by-nc-nd/4.0/"</span> <span class="attr">target</span>=<span class="string">"_blank"</span> <span class="attr">title</span>=<span class="string">"Attribution-NonCommercial-NoDerivatives 4.0 International (CC BY-NC-ND 4.0)"</span>&gt;</span>署名-非商业性使用-禁止演绎 4.0 国际<span class="tag">&lt;/<span class="name">a</span>&gt;</span> 转载请保留原文链接及作者。<span class="tag">&lt;/<span class="name">p</span>&gt;</span>  </span></span><br><span class="line"><span class="xml"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">script</span>&gt;</span> </span></span><br><span class="line"><span class="xml">    var clipboard = new Clipboard('.fa-clipboard');</span></span><br><span class="line"><span class="xml">    clipboard.on('success', $(function()&#123;</span></span><br><span class="line"><span class="xml">      $(".fa-clipboard").click(function()&#123;</span></span><br><span class="line"><span class="xml">        swal(&#123;   </span></span><br><span class="line"><span class="xml">          title: "",   </span></span><br><span class="line"><span class="xml">          text: '复制成功',   </span></span><br><span class="line"><span class="xml">          html: false,</span></span><br><span class="line"><span class="xml">          timer: 500,   </span></span><br><span class="line"><span class="xml">          showConfirmButton: false</span></span><br><span class="line"><span class="xml">        &#125;);</span></span><br><span class="line"><span class="xml">      &#125;);</span></span><br><span class="line"><span class="xml">    &#125;));  </span></span><br><span class="line"><span class="xml"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span></span><br><span class="line"><span class="xml"></span><span class="template-tag">&#123;% <span class="name"><span class="name">endif</span></span> %&#125;</span><span class="xml"></span></span><br></pre></td></tr></table></figure><p>　　然后在<code>H：/blog/themes/next/source/css/_common/components/post/</code>下添加<code>my-post-copyright.styl</code>：</p><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.my_post_copyright</span> &#123;</span><br><span class="line">  <span class="attribute">width</span>: <span class="number">85%</span>;</span><br><span class="line">  <span class="attribute">max-width</span>: <span class="number">45em</span>;</span><br><span class="line">  <span class="attribute">margin</span>: <span class="number">2.8em</span> auto <span class="number">0</span>;</span><br><span class="line">  <span class="attribute">padding</span>: <span class="number">0.5em</span> <span class="number">1.0em</span>;</span><br><span class="line">  <span class="attribute">border</span>: <span class="number">1px</span> solid <span class="number">#d3d3d3</span>;</span><br><span class="line">  <span class="attribute">font-size</span>: <span class="number">0.93rem</span>;</span><br><span class="line">  <span class="attribute">line-height</span>: <span class="number">1.6em</span>;</span><br><span class="line">  <span class="attribute">word-break</span>: break-all;</span><br><span class="line">  <span class="attribute">background</span>: rgba(<span class="number">255</span>,<span class="number">255</span>,<span class="number">255</span>,<span class="number">0.4</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.my_post_copyright</span> p&#123;<span class="attribute">margin</span>:<span class="number">0</span>;&#125;</span><br><span class="line"><span class="selector-class">.my_post_copyright</span> <span class="selector-tag">span</span> &#123;</span><br><span class="line">  <span class="attribute">display</span>: inline-block;</span><br><span class="line">  <span class="attribute">width</span>: <span class="number">5.2em</span>;</span><br><span class="line">  <span class="attribute">color</span>: <span class="number">#333333</span>; <span class="comment">// title color</span></span><br><span class="line">  <span class="attribute">font-weight</span>: bold;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.my_post_copyright</span> <span class="selector-class">.raw</span> &#123;</span><br><span class="line">  <span class="attribute">margin-left</span>: <span class="number">1em</span>;</span><br><span class="line">  <span class="attribute">width</span>: <span class="number">5em</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.my_post_copyright</span> <span class="selector-tag">a</span> &#123;</span><br><span class="line">  <span class="attribute">color</span>: <span class="number">#808080</span>;</span><br><span class="line">  <span class="attribute">border-bottom</span>:<span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.my_post_copyright</span> <span class="selector-tag">a</span>:hover &#123;</span><br><span class="line">  <span class="attribute">color</span>: <span class="number">#0593d3</span>; <span class="comment">// link color</span></span><br><span class="line">  <span class="attribute">text-decoration</span>: underline;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.my_post_copyright</span>:hover <span class="selector-class">.fa-clipboard</span> &#123;</span><br><span class="line">  <span class="attribute">color</span>: <span class="number">#000</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.my_post_copyright</span> <span class="selector-class">.post-url</span>:hover &#123;</span><br><span class="line">  <span class="attribute">font-weight</span>: normal;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.my_post_copyright</span> <span class="selector-class">.copy-path</span> &#123;</span><br><span class="line">  <span class="attribute">margin-left</span>: <span class="number">1em</span>;</span><br><span class="line">  <span class="attribute">width</span>: <span class="number">1em</span>;</span><br><span class="line">  +mobile()&#123;<span class="attribute">display</span>:none;&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.my_post_copyright</span> <span class="selector-class">.copy-path</span>:hover &#123;</span><br><span class="line">  <span class="attribute">color</span>: <span class="number">#808080</span>;</span><br><span class="line">  <span class="attribute">cursor</span>: pointer;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>　　然后打开<code>H:/blog/themes/next/layout/_macro/post.swig</code>文件，在<code>post-body</code> 之后， <code>post-footer</code> 之前添加以下代码：</p><figure class="highlight django"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">div</span>&gt;</span></span></span><br><span class="line"><span class="xml">   </span><span class="template-tag">&#123;% <span class="name"><span class="name">if</span></span> not is_index %&#125;</span><span class="xml"></span></span><br><span class="line"><span class="xml">      </span><span class="template-tag">&#123;% <span class="name"><span class="name">include</span></span> 'my-copyright.swig' %&#125;</span><span class="xml"></span></span><br><span class="line"><span class="xml">   </span><span class="template-tag">&#123;% <span class="name"><span class="name">endif</span></span> %&#125;</span><span class="xml"></span></span><br><span class="line"><span class="xml"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br></pre></td></tr></table></figure><p><img src="/2019/07/22/定制Hexo-NexT的个性化博客/%E7%89%88%E6%9D%83%E4%BF%A1%E6%81%AF%E4%BB%A3%E7%A0%81.png" alt></p><p>　　最后修改<code>next/source/css/_common/components/post/post.styl</code>文件，在最后一行增加代码：</p><figure class="highlight xl"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">@<span class="keyword">import</span> <span class="string">"my-post-copyright"</span></span><br></pre></td></tr></table></figure><h4 id="添加来必力评论系统"><a href="#添加来必力评论系统" class="headerlink" title="添加来必力评论系统"></a>添加来必力评论系统</h4><p>效果图</p><p><img src="/2019/07/22/定制Hexo-NexT的个性化博客/%E8%AF%84%E8%AE%BA%E7%B3%BB%E7%BB%9F.png" alt></p><p>实现方法</p><p>　　打开<a href="https://www.livere.com/" target="_blank" rel="noopener">来必力</a>的官网，注册，注册好之后打开设置页面，填写博客地址</p><p><img src="/2019/07/22/定制Hexo-NexT的个性化博客/%E6%9D%A5%E5%BF%85%E5%8A%9B%E8%AE%BE%E7%BD%AE.png" alt></p><p>　　然后在代码管理页面，把uid复制到主题配置文件<code>_config.yml</code>的<code>livere_uid:</code></p><p><img src="/2019/07/22/定制Hexo-NexT的个性化博客/%E6%9D%A5%E5%BF%85%E5%8A%9B%E4%BB%A3%E7%A0%81.png" alt></p><p><img src="/2019/07/22/定制Hexo-NexT的个性化博客/liveruid.png" alt></p><h4 id="修改博客底部的红色跳动爱心"><a href="#修改博客底部的红色跳动爱心" class="headerlink" title="修改博客底部的红色跳动爱心"></a>修改博客底部的红色跳动爱心</h4><p><img src="/2019/07/22/定制Hexo-NexT的个性化博客/%E5%BA%95%E9%83%A8%E8%AE%BF%E9%97%AE%E9%87%8F.png" alt></p><p>　　打开主题配置文件，找到<code>footer:</code>，修改为以下内容：</p><p><img src="/2019/07/22/定制Hexo-NexT的个性化博客/%E8%B7%B3%E5%8A%A8%E7%BA%A2%E5%BF%83.png" alt></p><h4 id="DaoVoice在线联系"><a href="#DaoVoice在线联系" class="headerlink" title="DaoVoice在线联系"></a>DaoVoice在线联系</h4><p>效果图</p><p><img src="/2019/07/22/定制Hexo-NexT的个性化博客/daovoice.png" alt></p><p>实现方法</p><p>　　先在 <a href="https://account.daocloud.io/signin" target="_blank" rel="noopener">daovoice</a> 注册账号，<a href="http://dashboard.daovoice.io/get-started?invite_code=0f81ff2f" target="_blank" rel="noopener">邀请码</a>是<code>dda712fb</code>，注册完成后会得到一个 app_id ：</p><p><img src="/2019/07/22/定制Hexo-NexT的个性化博客/daovoice_ID.png" alt></p><p>　　然后打开<code>/themes/next/layout/_partials/head.swig</code>,在末尾添加如下代码：</p><figure class="highlight django"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="xml"></span><span class="template-tag">&#123;% <span class="name"><span class="name">if</span></span> theme.daovoice %&#125;</span><span class="xml"></span></span><br><span class="line"><span class="xml">  <span class="tag">&lt;<span class="name">script</span>&gt;</span></span></span><br><span class="line"><span class="xml">  (function(i,s,o,g,r,a,m)&#123;i["DaoVoiceObject"]=r;i[r]=i[r]||function()&#123;(i[r].q=i[r].q||[]).push(arguments)&#125;,i[r].l=1*new Date();a=s.createElement(o),m=s.getElementsByTagName(o)[0];a.async=1;a.src=g;a.charset="utf-8";m.parentNode.insertBefore(a,m)&#125;)(window,document,"script",('https:' == document.location.protocol ? 'https:' : 'http:') + "//widget.daovoice.io/widget/dda712fb.js","daovoice")</span></span><br><span class="line"><span class="xml">  daovoice('init', &#123;</span></span><br><span class="line"><span class="xml">      app_id: "</span><span class="template-variable">&#123;&#123;theme.daovoice_app_id&#125;&#125;</span><span class="xml">"</span></span><br><span class="line"><span class="xml">    &#125;);</span></span><br><span class="line"><span class="xml">  daovoice('update');</span></span><br><span class="line"><span class="xml">  <span class="tag">&lt;/<span class="name">script</span>&gt;</span></span></span><br><span class="line"><span class="xml"></span><span class="template-tag">&#123;% <span class="name"><span class="name">endif</span></span> %&#125;</span><span class="xml"></span></span><br></pre></td></tr></table></figure><p><img src="/2019/07/22/定制Hexo-NexT的个性化博客/daovoice%E4%BB%A3%E7%A0%81.png" alt></p><p>　　最后打开主题配置文件，在末尾添加如下代码：</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Online contact</span></span><br><span class="line"><span class="attr">daovoice:</span> <span class="literal">true</span></span><br><span class="line"><span class="attr">daovoice_app_id:</span> <span class="string">这里填你的刚才获得的</span> <span class="string">app_id</span></span><br></pre></td></tr></table></figure><h4 id="设置博客摘要显示"><a href="#设置博客摘要显示" class="headerlink" title="设置博客摘要显示"></a>设置博客摘要显示</h4><p>　　打开主题配置文件，修改为以下内容：</p><p><img src="/2019/07/22/定制Hexo-NexT的个性化博客/%E6%91%98%E8%A6%81%E6%98%BE%E7%A4%BA.png" alt></p><p>　　这样就能实现在主页只展示部分文字，其他文字隐藏起来，通过点击’阅读更多’来阅读全文。在写每一篇文章的时候，也要在必要的地方添加<code>&lt;!-- more --&gt;</code></p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">---</span></span><br><span class="line"><span class="attr">title:</span> <span class="string">使用Github+Hexo搭建你的个人博客：搭建篇</span></span><br><span class="line"><span class="attr">copyright:</span> <span class="literal">true</span></span><br><span class="line"><span class="attr">date:</span> <span class="number">2019</span><span class="bullet">-07</span><span class="bullet">-21</span> <span class="number">15</span><span class="string">:25:12</span></span><br><span class="line"><span class="attr">categories:</span> <span class="string">Hexo</span></span><br><span class="line"><span class="attr">tags:</span> <span class="string">[GitHub,个人博客,Hexo]</span></span><br><span class="line"></span><br><span class="line"><span class="meta">---</span></span><br><span class="line"></span><br><span class="line"><span class="string">&lt;blockquote</span> <span class="string">class="blockquote-center"&gt;海阔凭鱼跃，天高任鸟飞。</span></span><br><span class="line"><span class="string">&lt;/blockquote&gt;</span></span><br><span class="line"></span><br><span class="line">　　<span class="string">早在初中，就想着自己搭起一个属于自己的网站，但是没有技术又不肯学习的我，怯于尝试，一直停滞不前。大学期间终于学习了，又因为自己的懒惰，觉得很难，不肯去尝试。直至今日，我想试一试，捣鼓了好一阵子，发现认真去做了，也没有想象中的难。</span></span><br><span class="line"></span><br><span class="line"><span class="string">&lt;!--</span> <span class="string">more</span> <span class="bullet">--&gt;</span></span><br></pre></td></tr></table></figure><h4 id="文章链接唯一化"><a href="#文章链接唯一化" class="headerlink" title="文章链接唯一化"></a>文章链接唯一化</h4><p>　　也许你会数次更改文章题目或者变更文章发布时间，在默认设置下，文章链接都会改变，不利于搜索引擎收录，也不利于分享。唯一永久链接才是更好的选择。</p><p>　　首先安装插件</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm <span class="keyword">install</span> hexo-abbrlink <span class="comment">--save</span></span><br></pre></td></tr></table></figure><p>　　然后在站点配置文件中找到<code>permalink</code>，修改为如下内容：</p><figure class="highlight elixir"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="symbol">permalink:</span> posts/<span class="symbol">:abbrlink/</span>  <span class="comment"># “posts/” 可自行更换</span></span><br></pre></td></tr></table></figure><p>　　这里有个知识点：</p><blockquote><p>百度蜘蛛抓取网页的规则: 对于蜘蛛说网页权重越高、信用度越高抓取越频繁，例如网站的首页和内页。蜘蛛先抓取网站的首页，因为首页权重更高，并且大部分的链接都是指向首页。然后通过首页抓取网站的内页，并不是所有内页蜘蛛都会去抓取。</p></blockquote><p>　　搜索引擎认为对于一般的中小型站点，3层足够承受所有的内容了，所以蜘蛛经常抓取的内容是前三层，而超过三层的内容蜘蛛认为那些内容并不重要，所以不经常爬取。出于这个原因所以permalink后面跟着的最好不要超过2个斜杠。</p><p>　　接着在站点配置文件中添加如下代码:</p><figure class="highlight x86asm"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"># abbrlink config</span><br><span class="line"><span class="symbol">abbrlink:</span>  alg: <span class="keyword">crc32</span>  # 算法：crc16(<span class="meta">default</span>) <span class="keyword">and</span> <span class="keyword">crc32</span></span><br><span class="line"><span class="symbol">rep:</span> hex    # 进制：<span class="keyword">dec</span>(<span class="meta">default</span>) <span class="keyword">and</span> hex</span><br></pre></td></tr></table></figure><p>可选择模式：</p><ul><li><p>crc16 &amp; hex</p></li><li><p>crc16 &amp; dec</p></li><li><p>crc32 &amp; hex</p></li><li><p>crc32 &amp; dec</p></li></ul><h4 id="修改顶端的线条颜色"><a href="#修改顶端的线条颜色" class="headerlink" title="修改顶端的线条颜色"></a>修改顶端的线条颜色</h4><p>　　next主题顶端的线条颜色默认是黑色的，我看着不舒服就把它改成了粉色</p><p>效果图</p><p><img src="/2019/07/22/定制Hexo-NexT的个性化博客/%E5%8D%9A%E5%AE%A2%E9%A1%B6%E7%AB%AF%E5%8A%A0%E8%BD%BD%E6%9D%A1.gif" alt></p><p>实现方法</p><p>　　打开<code>themes/next/source/css/_variables/base.styl</code>,找到<code>headband</code>，修改为以下内容：</p><figure class="highlight gams"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// Headband</span></span><br><span class="line"><span class="comment">// --------------------------------------------------</span></span><br><span class="line"><span class="meta"><span class="meta-keyword">$headband</span>-height                = 2px</span></span><br><span class="line"><span class="meta"><span class="meta-keyword">$headband</span>-bg                    = #e3cae4</span></span><br></pre></td></tr></table></figure><h4 id="去除文章下方分类于的下划线"><a href="#去除文章下方分类于的下划线" class="headerlink" title="去除文章下方分类于的下划线"></a>去除文章下方分类于的下划线</h4><p>　　打开<code>themes/next/source/css/_common/scaffolding/base.styl</code>,找到<code>span.exturl</code>，修改为以下内容：</p><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">a</span>, <span class="selector-tag">span</span><span class="selector-class">.exturl</span> &#123;</span><br><span class="line">  <span class="attribute">word-wrap</span>();</span><br><span class="line">  <span class="comment">// Remove the gray background color from active links in IE 10.</span></span><br><span class="line">  <span class="attribute">background-color</span>: transparent;</span><br><span class="line">  <span class="attribute">color</span>: <span class="number">#999999</span>;</span><br><span class="line">  <span class="attribute">text-decoration</span>: none;</span><br><span class="line">  <span class="attribute">outline</span>: none;</span><br><span class="line">  <span class="attribute">border-bottom</span>: <span class="number">0px</span> solid <span class="variable">$link</span>-decoration-color;</span><br></pre></td></tr></table></figure><p><img src="/2019/07/22/定制Hexo-NexT的个性化博客/%E5%8E%BB%E9%99%A4%E5%88%86%E7%B1%BB%E4%BA%8E%E7%9A%84%E4%B8%8B%E5%88%92%E7%BA%BF.png" alt></p><h4 id="左侧社交图标居中"><a href="#左侧社交图标居中" class="headerlink" title="左侧社交图标居中"></a>左侧社交图标居中</h4><p>　　强迫症的我居然发现了左侧社交图标似乎不太居中啊，一定得把它搞居中。</p><p>效果图</p><p><img src="/2019/07/22/定制Hexo-NexT的个性化博客/%E7%A4%BE%E4%BA%A4%E5%9B%BE%E6%A0%87%E5%B1%85%E4%B8%AD%E6%95%88%E6%9E%9C%E5%9B%BE.png" alt></p><p>实现方法</p><p>　　打开<code>themes/next/source/css/_schemes/Pisces/_sidebar.styl</code>,找到<code>.site-overview</code>，修改为以下内容：</p><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.site-overview</span> &#123;</span><br><span class="line">  <span class="comment">//margin: 0 2px;</span></span><br><span class="line">  <span class="attribute">text-align</span>:</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><img src="/2019/07/22/定制Hexo-NexT的个性化博客/%E7%A4%BE%E4%BA%A4%E5%9B%BE%E6%A0%87%E5%B1%85%E4%B8%AD.png" alt></p><h4 id="建立阅读排行榜"><a href="#建立阅读排行榜" class="headerlink" title="建立阅读排行榜"></a>建立阅读排行榜</h4><p>　　新建一个阅读排行榜界面，用于显示本站文章的阅读排行榜，基于lencloud进行统计</p><h5 id="新建页面"><a href="#新建页面" class="headerlink" title="新建页面"></a>新建页面</h5><p>　　<code>hexo n page top</code> 新建页面，生成 top 目录，编辑其中自动生成的 index.md 文件，将其中的代码替换如下：</p><figure class="highlight maxima"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line">&lt;div id=<span class="string">"top"</span>&gt;&lt;/div&gt;</span><br><span class="line">&lt;script src=<span class="string">"https://cdn1.lncld.net/static/js/av-core-mini-0.6.4.js"</span>&gt;&lt;/script&gt;</span><br><span class="line">&lt;script&gt;AV.initialize(<span class="string">"leancloud_appid这里填入你的id"</span>, <span class="string">"leancloud_appkey这里填入你的key"</span>);&lt;/script&gt;</span><br><span class="line">&lt;script type=<span class="string">"text/javascript"</span>&gt;</span><br><span class="line">  <span class="built_in">var</span> <span class="built_in">time</span>=<span class="number">0</span></span><br><span class="line">  <span class="built_in">var</span> <span class="built_in">title</span>=<span class="string">""</span></span><br><span class="line">  <span class="built_in">var</span> url=<span class="string">""</span></span><br><span class="line">  <span class="built_in">var</span> query = <span class="built_in">new</span> AV.Query('Counter');</span><br><span class="line">  query.notEqualTo('id',<span class="number">0</span>);</span><br><span class="line">  query.descending('<span class="built_in">time</span>');</span><br><span class="line">  query.<span class="built_in">limit</span>(<span class="number">1000</span>);</span><br><span class="line">  query.find().<span class="keyword">then</span>(function (todo) &#123;</span><br><span class="line">    <span class="keyword">for</span> (<span class="built_in">var</span> i=<span class="number">0</span>;i&lt;<span class="number">1000</span>;i++)&#123;</span><br><span class="line">      <span class="built_in">var</span> result=todo[i].attributes;</span><br><span class="line">      <span class="built_in">time</span>=result.<span class="built_in">time</span>;</span><br><span class="line">      <span class="built_in">title</span>=result.<span class="built_in">title</span>;</span><br><span class="line">      url=result.url;</span><br><span class="line">      // <span class="built_in">var</span> <span class="built_in">content</span>=<span class="string">"&lt;a href='"</span>+<span class="string">"https://hoxis.github.io"</span>+url+<span class="string">"'&gt;"</span>+<span class="built_in">title</span>+<span class="string">"&lt;/a&gt;"</span>+<span class="string">"&lt;br&gt;"</span>+<span class="string">"&lt;font color='#fff'&gt;"</span>+<span class="string">"阅读次数："</span>+<span class="built_in">time</span>+<span class="string">"&lt;/font&gt;"</span>+<span class="string">"&lt;br&gt;&lt;br&gt;"</span>;</span><br><span class="line">      <span class="built_in">var</span> <span class="built_in">content</span>=<span class="string">"&lt;p&gt;"</span>+<span class="string">"&lt;font color='#e20404'&gt;"</span>+<span class="string">"【热度"</span>+<span class="built_in">time</span>+<span class="string">"℃】"</span>+<span class="string">"："</span>+<span class="string">"&lt;a href='"</span>+<span class="string">"https://xiaoxiaoxiaoxiaolin.github.io"</span>+url+<span class="string">"'&gt;"</span>+<span class="built_in">title</span>+<span class="string">"&lt;/a&gt;"</span>+<span class="string">"&lt;/p&gt;"</span>;</span><br><span class="line">      document.getElementById(<span class="string">"top"</span>).innerHTML+=<span class="built_in">content</span></span><br><span class="line">    &#125;</span><br><span class="line">  &#125;, function (<span class="built_in">error</span>) &#123;</span><br><span class="line">    console.<span class="built_in">log</span>(<span class="string">"error"</span>);</span><br><span class="line">  &#125;);</span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></table></figure><p>　　里面的<code>leancloud_appid</code>、<code>leancloud_appkey</code> 还有页面链接记得替换成你的。</p><h5 id="编辑菜单"><a href="#编辑菜单" class="headerlink" title="编辑菜单"></a>编辑菜单</h5><p>　　打开主题配置文件，添加top：</p><figure class="highlight dts"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="symbol">menu:</span></span><br><span class="line"><span class="symbol">  home:</span> / || home</span><br><span class="line"><span class="symbol">  top:</span> <span class="meta-keyword">/top/</span> || signal</span><br><span class="line"><span class="symbol">  categories:</span> <span class="meta-keyword">/categories/</span> || th</span><br><span class="line"><span class="symbol">  tags:</span> <span class="meta-keyword">/tags/</span> || tags</span><br><span class="line"><span class="symbol">  archives:</span> <span class="meta-keyword">/archives/</span> || archive</span><br><span class="line"><span class="symbol">  about:</span> <span class="meta-keyword">/about/</span> || user</span><br></pre></td></tr></table></figure><p>　　然后还需要对中文配置<code>hexo/blog/themes/next/languages/zh-CN.yml</code>进行修改，添加top对应的中文：</p><figure class="highlight dts"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="symbol">menu:</span></span><br><span class="line"><span class="symbol">  home:</span> 首页</span><br><span class="line"><span class="symbol">  top:</span> 热榜</span><br><span class="line"><span class="symbol">  archives:</span> 归档</span><br><span class="line"><span class="symbol">  categories:</span> 分类</span><br><span class="line"><span class="symbol">  tags:</span> 标签</span><br><span class="line"><span class="symbol">  about:</span> 关于</span><br><span class="line"><span class="symbol">  search:</span> 搜索</span><br><span class="line"><span class="symbol">  schedule:</span> 日程表</span><br><span class="line"><span class="symbol">  sitemap:</span> 站点地图</span><br><span class="line"><span class="symbol">  commonweal:</span> 公益 <span class="number">404</span></span><br></pre></td></tr></table></figure><h4 id="github分支管理博客"><a href="#github分支管理博客" class="headerlink" title="github分支管理博客"></a>github分支管理博客</h4><p>　　使用hexo发布博客最麻烦的地方在于，当你换了一台电脑后又想发布博客，又得把先前的环境重新搭建，拉取仓库。因为在github中的我们github.io项目是只有编译后的文件的，没有源文件的，也就是说，如果我们的电脑坏了，打不开了，我们的博客就不能进行更新了，所以我们要把我们的源文件也上传到github上。这个时候可以选择新建一个仓库来存放源文件，也可以把源文件 push 到 user.github.io 的其他分支。我选择了后者。</p><h5 id="创建分支"><a href="#创建分支" class="headerlink" title="创建分支"></a>创建分支</h5><p>　　创建两个分支：master 与 hexo,（这个hexo分支就是存放我们源文件的分支，我们只需要更新hexo分支上的内容据就好，master上的分支hexo编译的时候会更新的）</p><h5 id="初始化仓库"><a href="#初始化仓库" class="headerlink" title="初始化仓库"></a>初始化仓库</h5><p>　　然后我们再初始化仓库，重新对我们的代码进行版本控制</p><figure class="highlight dockerfile"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">git init</span><br><span class="line">git remote <span class="keyword">add</span><span class="bash"> origin &lt;server&gt;</span></span><br></pre></td></tr></table></figure><p>　　<code>&lt;server&gt;</code>是指在线仓库的地址。origin是本地分支，remote add操作会将本地仓库映射到云端</p><h5 id="将博客源文件上传到分支"><a href="#将博客源文件上传到分支" class="headerlink" title="将博客源文件上传到分支"></a>将博客源文件上传到分支</h5><p>　　.gitignore文件作用是声明不被git记录的文件，blog根目录下的.gitignore是hexo初始化带来的，可以先删除或者直接编辑，对hexo不会有影响。建议.gitignore内添加以下内容：</p><figure class="highlight jboss-cli"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">/.deploy_git</span></span><br><span class="line"><span class="string">/public</span></span><br><span class="line"><span class="string">/_config.yml</span></span><br></pre></td></tr></table></figure><p>　　.deploy_git是hexo默认的.git配置文件夹，不需要同步<br>　　public内文件是根据source文件夹内容自动生成，不需要备份，不然每次改动内容太多<br>　　即使是私有仓库，除去在线服务商员工可以看到的风险外，还有云服务商被攻击造成泄漏等可能，所以不建议将配置文件传上去</p><h5 id="依次执行"><a href="#依次执行" class="headerlink" title="依次执行"></a>依次执行</h5><figure class="highlight armasm"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="symbol">git</span> <span class="keyword">add </span>.</span><br><span class="line"><span class="symbol">git</span> commit -m <span class="string">"..."</span></span><br><span class="line"><span class="symbol">git</span> <span class="keyword">push </span>origin hexo</span><br></pre></td></tr></table></figure><h4 id="更改标签云的颜色"><a href="#更改标签云的颜色" class="headerlink" title="更改标签云的颜色"></a>更改标签云的颜色</h4><p>　　打开<code>/blog/themes/next/layout/page.swig</code>，找到tagcloud，修改为以下内容：</p><figure class="highlight groovy"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;&#123; tagcloud(&#123;<span class="string">min_font:</span> <span class="number">13</span>, <span class="string">max_font:</span> <span class="number">31</span>, <span class="string">amount:</span> <span class="number">1000</span>, <span class="string">color:</span> <span class="literal">true</span>, <span class="string">start_color:</span> <span class="string">'#9733EE'</span>, <span class="string">end_color:</span> <span class="string">'#FF512F'</span>&#125;) &#125;&#125;</span><br></pre></td></tr></table></figure><p>　　　<code>start_color</code>和<code>end_color</code>的颜色你可以自己随意定义。</p><h3 id="参考资料："><a href="#参考资料：" class="headerlink" title="参考资料："></a>参考资料：</h3><ul><li><a href="https://blog.csdn.net/gatieme/article/details/82317704" target="_blank" rel="noopener">使用 Hexo 搭建 GitHub Page 博客(二)–使用 GitHub 分支保存 Hexo 环境和博文</a></li><li><a href="http://muyunyun.cn/posts/f55182c5/#more" target="_blank" rel="noopener">hexo 摸爬滚打之进阶教程</a></li><li><a href="https://www.cnblogs.com/autoXingJY/p/9004724.html" target="_blank" rel="noopener">GitHub–创建新的分支(转)</a></li><li><a href="https://io-oi.me/tech/hexo-next-optimization.html" target="_blank" rel="noopener">打造个性超赞博客 Hexo + NexT + GitHub Pages 的超深度优化</a></li><li><a href="http://shenzekun.cn/hexo的next主题个性化配置教程.html" target="_blank" rel="noopener">hexo的next主题个性化教程:打造炫酷网站 | Moorez</a></li><li><a href="http://www.makcyun.top/2018/07/17/hexo02.html" target="_blank" rel="noopener">4块钱,用Github+Hexo搭建你的个人博客：美化篇</a></li></ul><p>还有一些参考的资料链接已经找不到了，所以就不一一列出了。第一次写，如有错误，欢迎指出，不胜感激。</p>]]></content>
    
    <summary type="html">
    
      &lt;blockquote class=&quot;blockquote-center&quot;&gt;海阔凭鱼跃，天高任鸟飞。
&lt;/blockquote&gt;

&lt;p&gt;　　前几天，我写了一篇关于如何使用GitHub＋Hexo搭建个人博客的博文，接下来我会以我的博客为例，讲讲如何对NexT主题的个性化定制和一些细节的优化。&lt;/p&gt;
    
    </summary>
    
      <category term="Hexo" scheme="https://xiaoxiaoxiaoxiaolin.github.io/categories/Hexo/"/>
    
    
      <category term="GitHub" scheme="https://xiaoxiaoxiaoxiaolin.github.io/tags/GitHub/"/>
    
      <category term="个人博客" scheme="https://xiaoxiaoxiaoxiaolin.github.io/tags/%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2/"/>
    
      <category term="Hexo" scheme="https://xiaoxiaoxiaoxiaolin.github.io/tags/Hexo/"/>
    
  </entry>
  
  <entry>
    <title>使用Github+Hexo搭建你的个人博客：搭建篇</title>
    <link href="https://xiaoxiaoxiaoxiaolin.github.io/2019/07/21/%E4%BD%BF%E7%94%A8Github-Hexo%E6%90%AD%E5%BB%BA%E4%BD%A0%E7%9A%84%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2%EF%BC%9A%E6%90%AD%E5%BB%BA%E7%AF%87/"/>
    <id>https://xiaoxiaoxiaoxiaolin.github.io/2019/07/21/使用Github-Hexo搭建你的个人博客：搭建篇/</id>
    <published>2019-07-21T07:25:12.000Z</published>
    <updated>2019-07-28T09:21:58.696Z</updated>
    
    <content type="html"><![CDATA[<blockquote class="blockquote-center">海阔凭鱼跃，天高任鸟飞。</blockquote><p>　　早在初中，就想着自己搭起一个属于自己的网站，但是没有技术又不肯学习的我，怯于尝试，一直停滞不前。大学期间终于学习了，又因为自己的懒惰，觉得很难，不肯去尝试。直至今日，我想试一试，捣鼓了好一阵子，发现认真去做了，也没有想象中的难。</p><a id="more"></a><p>　　其实早在放假之前，我就一直在捣鼓自己的博客了，使用的是<a href="https://www.djangoproject.com/" target="_blank" rel="noopener">Django</a>。搞了好一阵子，就只剩一些细节的问题，准备上线的时候，<a href="https://hexo.io/zh-cn/" target="_blank" rel="noopener">Hexo</a>出现在我的眼前,简约的风格一下子吸引了我，这正是我想要的。好了，别说了，我改还不行吗，就这样我已经搭好准备上线的Django，转入Hexo。</p><h3 id="自己建站的原因"><a href="#自己建站的原因" class="headerlink" title="自己建站的原因"></a>自己建站的原因</h3><p>　　网上这么多现成的博客不用，为什么非得浪费这么多时间去自己搭建呢？<br>　　可能会有人这样说：很多网站都能写博客，干嘛这么浪费时间呢？<br>　　在这里我说一下我想自己搭建的原因:<br>　　1、网上大部分的博客功能都是差不多的，但是限制也是挺多的，花里胡哨的广告，文章不管是自己还是别人看，体验都很不舒服。<br>　　2、除了广告的原因，排版的限制以外，拥有一个自己可以随意定制的博客网站，内容和排版都自己可以随意决定，是不是很酷。<br>　　除此以外，自己在这段时间确实学习到了很多。宅在家里好一段时间，除了吃饭睡觉就是搭建自己的博客。搭建博客也是成为了我学习的动力，现在搭建好了之后，也不会觉得没有事情干，相反，会因为博客的空白而继续努力学习、写博客、写自己的想法，努力让自己的博客、生活、还有学习充实起来。</p><h3 id="开始搭建博客"><a href="#开始搭建博客" class="headerlink" title="开始搭建博客"></a>开始搭建博客</h3><p>什么是Hexo？</p><p>　　Hexo是一个快速、简洁且高效的博客框架。Hexo 使用 <a href="http://daringfireball.net/projects/markdown/" target="_blank" rel="noopener">Markdown</a>（或其他渲染引擎）解析文章，在几秒内，即可利用靓丽的主题生成静态网页。</p><h4 id="环境部署"><a href="#环境部署" class="headerlink" title="环境部署"></a>环境部署</h4><p>Hexo安装前提</p><p>　　安装 Hexo 相当简单。然而在安装前，必须检查电脑中是否已安装下列应用程序：</p><ul><li><a href="http://nodejs.org/" target="_blank" rel="noopener">Node.js</a> (Should be at least nodejs 6.9)</li><li><a href="http://git-scm.com/" target="_blank" rel="noopener">Git</a></li></ul><p>　　如果你的电脑中已经安装上述必备程序，那么恭喜！接下来只需要使用 npm 即可完成 Hexo 的安装。</p><figure class="highlight avrasm"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install -g hexo-<span class="keyword">cli</span></span><br></pre></td></tr></table></figure><p>　　如果你的电脑中尚未安装所需要的程序，请自行百度或者Google完成安装。<br>　　安装好所有环境之后，可以用以下命令是否安装成功，如果有返回版本信息说明安装成功。</p><figure class="highlight crmsh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">git <span class="keyword">version</span></span><br><span class="line"><span class="keyword">node</span> <span class="title">-v</span></span><br><span class="line">npm -v</span><br></pre></td></tr></table></figure><h4 id="Hexo安装"><a href="#Hexo安装" class="headerlink" title="Hexo安装"></a>Hexo安装</h4><ul><li>安装hexo</li></ul><p>　　桌面右键点击git bash here，打开git软件界面，输入以下命令并回车：</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">npm <span class="keyword">install</span> hexo-cli -g</span><br><span class="line">npm <span class="keyword">install</span> hexo-deployer-git <span class="comment">--save</span></span><br></pre></td></tr></table></figure><p>　　第一句是安装hexo，第二句是安装hexo部署到git page的deployer。</p><ul><li>设置博客存放的目录</li></ul><figure class="highlight jboss-cli"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">hexo init <span class="string">/h/blog</span></span><br><span class="line"><span class="keyword">cd</span> <span class="string">/h/blog</span></span><br><span class="line">npm install</span><br><span class="line">*注：<span class="string">/h/bog</span>可以更改为你自己的文件夹*</span><br></pre></td></tr></table></figure><p>　　有的教程是先建立起博客的文件夹，再在该文件夹下右键鼠标，点击Git Bash Here，进入Git命令框，再执行以下操作。操作因人而异，没多大影响，只要能成功搭建就没问题了。</p><ul><li>查看博客的效果</li></ul><p>　　至此，一个博客就初步搭建好了，先预览一下：</p><figure class="highlight 1c"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo g <span class="meta">&amp;&amp; hexo s</span></span><br></pre></td></tr></table></figure><p>　　然后在浏览器中打开：localhost:4000就可以看到博客的样子了。<br><img src="/2019/07/21/使用Github-Hexo搭建你的个人博客：搭建篇/1.jpg" alt></p><p>　　打开该网址，你可以看到第一篇默认的博客：<strong>Hello World</strong>。虽然看起来有点难看，但是后续我们可以通过重新选择模板来对博客进行美化。</p><h4 id="把博客部署到GitHub"><a href="#把博客部署到GitHub" class="headerlink" title="把博客部署到GitHub"></a>把博客部署到GitHub</h4><h5 id="Github账号注册及配置"><a href="#Github账号注册及配置" class="headerlink" title="Github账号注册及配置"></a>Github账号注册及配置</h5><p>　　如果你没有github帐号，就新建一个，然后去邮箱进行验证；如果你有帐号则直接登录。官网：<a href="https://github.com/" target="_blank" rel="noopener">https://github.com/</a></p><h5 id="建立new-repository"><a href="#建立new-repository" class="headerlink" title="建立new repository"></a>建立new repository</h5><p>　　只填写username.github.io即可，然后点击<code>create repositrory</code>。<br>　　注意：<code>username.github.io</code> 的<code>username</code>要和用户名保持一致，不然后面会失败。以我的为例：<br><img src="/2019/07/21/使用Github-Hexo搭建你的个人博客：搭建篇/2.png" alt></p><p><img src="/2019/07/21/使用Github-Hexo搭建你的个人博客：搭建篇/3.png" alt></p><h5 id="开启gh-pages功能"><a href="#开启gh-pages功能" class="headerlink" title="开启gh-pages功能"></a>开启gh-pages功能</h5><p>　　点击github主页点击头像下面的profile,找到新建立的username.github.io文件打开，点击settings，往下拉动鼠标到GitHub Pages。<br>    如果你看到上方出现以下警告：</p><blockquote><p>GitHub Pages is currently disabled. You must first add content to your repository before you can publish a GitHub Pages site</p></blockquote><p>　　不用管，点击选择<code>choose a theme</code>，随便选择一个，然后select theme保存就行了。<br><img src="/2019/07/21/使用Github-Hexo搭建你的个人博客：搭建篇/4.png" alt></p><p><img src="/2019/07/21/使用Github-Hexo搭建你的个人博客：搭建篇/5.png" alt></p><h5 id="配置ssh密钥"><a href="#配置ssh密钥" class="headerlink" title="配置ssh密钥"></a>配置ssh密钥</h5><p>　　配置Github的SSH密钥可以让本地git项目与远程的github建立联系，让我们在本地写了代码之后直接通过git操作就可以实现本地代码库与Github代码库同步。操作如下：</p><ul><li>看看是否存在SSH密钥</li></ul><p>　　首先，我们需要看看是否看看本机是否存在SSH keys,打开Git Bash,并运行：</p><figure class="highlight jboss-cli"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">cd</span> ~<span class="string">/.</span> ssh</span><br></pre></td></tr></table></figure><p>　　检查你本机用户home目录下是否存在.ssh目录<br>　　如果，不存在此目录，则进行第二步操作，否则，你本机已经存在ssh公钥和私钥，可以略过第二步，直接进入第三步操作。</p><ul><li>创建一对新的SSH密钥</li></ul><figure class="highlight perl"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ssh-keygen -t rsa -C <span class="string">"your_email@example.com"</span></span><br><span class="line"><span class="comment">#这将按照你提供的邮箱地址，创建一对密钥，记得修改</span></span><br></pre></td></tr></table></figure><p>　　直接回车，则将密钥按默认文件进行存储。此时也可以输入指定的文件夹。然后根据提示，你需要输入密码和确认密码，其实可以不用密码，就是到输密码的地方，都直接回车，所以每次push就只管回车就行了。跟着提示操作就对了，这里没什么坑。</p><ul><li>在GitHub账户中添加公钥</li></ul><p>　　运行如下命令，并将公钥的内容复制。</p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">clip &lt; ~<span class="regexp">/.ssh/i</span>d_rsa.pub</span><br></pre></td></tr></table></figure><ul><li>登陆GitHub，进入账户设置，在SSH Keys粘贴添加就可以了</li></ul><p><img src="/2019/07/21/使用Github-Hexo搭建你的个人博客：搭建篇/6.png" alt></p><ul><li>测试</li></ul><p>　　输入以下命令，看看[设置是否成功，<a href="mailto:git@github.com" target="_blank" rel="noopener">git@github.com</a>的部分不要修改：</p><figure class="highlight elixir"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">$ </span>ssh -T git<span class="variable">@github</span>.com</span><br></pre></td></tr></table></figure><blockquote><p>The authenticity of host ‘github.com (207.97.227.239)’ can’t be established.<br>RSA key fingerprint is 16:27:ac:a5:76:28:2d:36:63:1b:56:4d:eb:df:a6:48.<br>Are you sure you want to continue connecting (yes/no)?</p></blockquote><p>　　如果是第一次的会提示是否continue，输入yes就会看到：You’ve successfully authenticated, but GitHub does not provide shell access 。这就表示已成功连上github。</p><ul><li>设置用户信息</li></ul><p>　　现在你已经可以通过SSH链接到GitHub了，还有一些个人信息需要完善的。 Git会根据用户的名字和邮箱来记录提交。GitHub也是用这些信息来做权限的处理，输入下面的代码进行个人信息的设置，把名称和邮箱替换成你自己的，名字根据自己的喜好自己取，而不是GitHub的昵称。</p><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ git config --global user<span class="selector-class">.name</span> <span class="string">"你的用户名"</span><span class="comment">//用户名</span></span><br><span class="line">$ git config --global user<span class="selector-class">.email</span>  <span class="string">"你的邮箱"</span><span class="comment">//填写自己的邮箱</span></span><br></pre></td></tr></table></figure><ul><li>将本地的Hexo文件更新到GitHub的库中</li></ul><p>　　SSH Key配置成功后，接下来我们要把本地的Hexo文件上传到GitHub库中。<br>　　打开Hexo文件夹下的_config.yml，这个是博客的配置文件，添加你的GitHub page url<br><img src="/2019/07/21/使用Github-Hexo搭建你的个人博客：搭建篇/7.png" alt></p><p>　　然后执行以下命令：</p><figure class="highlight 1c"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo g <span class="meta">&amp;&amp; hexo d 或者 hexo g -d</span></span><br></pre></td></tr></table></figure><p>　　此时在浏览器打开你的主页地址，你就能看到你的博客了。</p><h4 id="写下自己的第一篇博客"><a href="#写下自己的第一篇博客" class="headerlink" title="写下自己的第一篇博客"></a>写下自己的第一篇博客</h4><p>　　接下来你可以在博客的根目录下运行命令：</p><figure class="highlight actionscript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo <span class="keyword">new</span> <span class="string">"第一篇博客"</span></span><br></pre></td></tr></table></figure><p>　　然后打开<code>D:\blog\source\_posts</code>文件夹，就可以看到一个<code>第一篇博客.md</code>的文件，用支持markdown语法的软件打开该文件进行编辑即可。<br>　　编辑好以后，运行下述命令：</p><figure class="highlight 1c"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo clean <span class="meta">&amp;&amp; hexo d -g</span></span><br></pre></td></tr></table></figure><p>　　然后，在网址中输入<code>username.github.io</code>即可看到你的博客上，出现“第一篇博客”这篇新的文章。<br>　　至此，你的个人博客初步搭建过程就完成了。</p><h3 id="相关补充"><a href="#相关补充" class="headerlink" title="相关补充"></a>相关补充</h3><p>　　在以后的博客发布，都是需要使用Markdown语法去写的，所以我们需要对markdown有所了解。<br>　　关于markdown的语法介绍可以看看这篇文章：<a href="https://www.jianshu.com/p/1e402922ee32/" target="_blank" rel="noopener">markdown——入门指南</a><br>　　当你大致了解markdown语法后，如何用markdown写博客呢？不妨参考这两篇详细教程：</p><blockquote><p><a href="https://markdown.tw/" target="_blank" rel="noopener">Markdown语法说明</a><br><a href="https://www.ofind.cn/archives/" target="_blank" rel="noopener">Hexo下的Markdown语法(GFM)写博客</a></p></blockquote><p>　　接下来你还得需要一个高效的markdown软件，这里我是用的是<a href="https://typora.io/" target="_blank" rel="noopener">Typora</a>，安装好后就可以打开刚刚的<code>第一篇博客.md</code>，开始尝试写你的第一篇博客了。<br>　　写完之后，别忘了在博客根目录下再次运行：</p><figure class="highlight 1c"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo clean <span class="meta">&amp;&amp; hexo d -g</span></span><br></pre></td></tr></table></figure><p>　　到这里，博客的初步搭建就算完成了，如果中间出现差错，请保持耐心多试几次，办法总比问题多嘛！关于Hexo的一些了解和常用命令，<a href="https://hexo.io/zh-cn/docs/" target="_blank" rel="noopener">请自行查阅官方文档</a>，一般可解决大部分的问题。<br>　　此时，还有一个比较重要的问题就是，博客的美化问题，下一篇文章，我会以我的博客为例，讲一讲我的博客是如何进行美化的。</p><p>　　第一次写博客，如有问题，欢迎指出，谢谢各位大佬，我会继续努力的。</p><p><img src="/2019/07/21/使用Github-Hexo搭建你的个人博客：搭建篇/%E5%BF%83%E8%8A%B1%E6%80%92%E6%94%BE.gif" alt></p>]]></content>
    
    <summary type="html">
    
      &lt;blockquote class=&quot;blockquote-center&quot;&gt;海阔凭鱼跃，天高任鸟飞。
&lt;/blockquote&gt;

&lt;p&gt;　　早在初中，就想着自己搭起一个属于自己的网站，但是没有技术又不肯学习的我，怯于尝试，一直停滞不前。大学期间终于学习了，又因为自己的懒惰，觉得很难，不肯去尝试。直至今日，我想试一试，捣鼓了好一阵子，发现认真去做了，也没有想象中的难。&lt;/p&gt;
    
    </summary>
    
      <category term="Hexo" scheme="https://xiaoxiaoxiaoxiaolin.github.io/categories/Hexo/"/>
    
    
      <category term="GitHub" scheme="https://xiaoxiaoxiaoxiaolin.github.io/tags/GitHub/"/>
    
      <category term="个人博客" scheme="https://xiaoxiaoxiaoxiaolin.github.io/tags/%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2/"/>
    
      <category term="Hexo" scheme="https://xiaoxiaoxiaoxiaolin.github.io/tags/Hexo/"/>
    
  </entry>
  
</feed>
